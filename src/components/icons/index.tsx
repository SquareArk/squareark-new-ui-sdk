import React from 'react';

interface IProps {
  height?: string;
  width?: string;
  fill?: string;
}

export const MessageIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
  fill = '#C7C7C7',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        x="4"
        y="6"
        width="16"
        height="12"
        rx="2"
        stroke={fill}
        strokeWidth="2"
      />
      <path
        d="M4 9L11.1056 12.5528C11.6686 12.8343 12.3314 12.8343 12.8944 12.5528L20 9"
        stroke={fill}
        strokeWidth="2"
      />
    </svg>
  );
};

export const LockIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
  fill = '#C7C7C7',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4 12C4 10.1144 4 9.17157 4.58579 8.58579C5.17157 8 6.11438 8 8 8H16C17.8856 8 18.8284 8 19.4142 8.58579C20 9.17157 20 10.1144 20 12V14C20 16.8284 20 18.2426 19.1213 19.1213C18.2426 20 16.8284 20 14 20H10C7.17157 20 5.75736 20 4.87868 19.1213C4 18.2426 4 16.8284 4 14V12Z"
        stroke={fill}
        stroke-width="2"
      />
      <path
        d="M16 7V6C16 3.79086 14.2091 2 12 2V2C9.79086 2 8 3.79086 8 6V7"
        stroke={fill}
        stroke-width="2"
        stroke-linecap="round"
      />
      <circle cx="12" cy="14" r="2" fill={fill} />
    </svg>
  );
};

export const HideIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.9202 12.7988C15.9725 12.5407 16 12.2736 16 12C16 9.79086 14.2091 8 12 8C11.7264 8 11.4593 8.02746 11.2012 8.07977L15.9202 12.7988ZM8.66676 9.78799C8.24547 10.4216 8 11.1821 8 12C8 14.2091 9.79086 16 12 16C12.8179 16 13.5784 15.7545 14.212 15.3332L12.7381 13.8594C12.5098 13.9501 12.2607 14 12 14C10.8954 14 10 13.1046 10 12C10 11.7393 10.0499 11.4902 10.1406 11.2619L8.66676 9.78799Z"
        fill="#575757"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.5191 17.6405L15.0499 16.1712C14.0776 16.6805 13.0477 17 12 17C10.4742 17 8.98616 16.3224 7.65914 15.3677C6.34002 14.4186 5.26409 13.2558 4.58386 12.43C4.48409 12.3088 4.40958 12.2182 4.34785 12.1385C4.29899 12.0754 4.26786 12.0315 4.24756 12C4.26786 11.9685 4.29899 11.9246 4.34785 11.8615C4.40958 11.7818 4.48409 11.6912 4.58386 11.57C5.24928 10.7622 6.29335 9.63187 7.57331 8.69463L6.14458 7.2659C4.79643 8.29616 3.72247 9.47005 3.04009 10.2985C3.01651 10.3272 2.99192 10.3566 2.96662 10.3869L2.96661 10.3869C2.65318 10.7624 2.22974 11.2696 2.22974 12C2.22974 12.7304 2.65318 13.2376 2.9666 13.6131L2.96682 13.6133C2.99205 13.6435 3.01657 13.6729 3.04009 13.7015C3.77996 14.5998 4.98018 15.9041 6.49111 16.9912C7.99416 18.0725 9.89008 19 12 19C13.67 19 15.206 18.419 16.5191 17.6405ZM8.80682 5.6855C9.79062 5.26871 10.8643 5 12 5C14.1099 5 16.0059 5.92747 17.5089 7.00885C19.0198 8.0959 20.2201 9.40025 20.9599 10.2985C20.9835 10.3272 21.0081 10.3566 21.0334 10.3869L21.0334 10.3869C21.3468 10.7624 21.7703 11.2696 21.7703 12C21.7703 12.7304 21.3468 13.2376 21.0334 13.6131C21.0081 13.6434 20.9835 13.6728 20.9599 13.7015C20.4733 14.2923 19.7874 15.0589 18.945 15.8237L17.529 14.4077C18.3089 13.708 18.9539 12.9912 19.4162 12.43C19.5159 12.3088 19.5904 12.2182 19.6522 12.1385C19.701 12.0754 19.7322 12.0315 19.7525 12C19.7322 11.9685 19.701 11.9246 19.6522 11.8615C19.5904 11.7818 19.5159 11.6912 19.4162 11.57C18.7359 10.7442 17.66 9.58138 16.3409 8.63233C15.0139 7.6776 13.5258 7 12 7C11.449 7 10.9029 7.08837 10.3676 7.24624L8.80682 5.6855Z"
        fill="#575757"
      />
      <path d="M5 2L21 18" stroke="#575757" strokeWidth="2" />
    </svg>
  );
};

export const ViewIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
  fill = '#C7C7C7',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 5C6.55576 5 3.53109 9.23425 2.45554 11.1164C2.23488 11.5025 2.12456 11.6956 2.1367 11.9836C2.14885 12.2716 2.27857 12.4598 2.53799 12.8362C3.8182 14.6935 7.29389 19 12 19C16.7061 19 20.1818 14.6935 21.462 12.8362C21.7214 12.4598 21.8511 12.2716 21.8633 11.9836C21.8754 11.6956 21.7651 11.5025 21.5445 11.1164C20.4689 9.23425 17.4442 5 12 5Z"
        stroke={fill}
        strokeWidth="2"
      />
      <circle cx="12" cy="12" r="4" fill={fill} />
    </svg>
  );
};

export const SearchIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="11" cy="11" r="7" stroke="#575757" strokeWidth="2" />
      <path
        d="M20 20L17 17"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const CloseIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18 6L6 18"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6 6L18 18"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const MenuIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M5 7H19"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M5 12H15"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M5 17H11"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const StoreIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.5 21V16C14.5 15.4477 14.0523 15 13.5 15H10.5C9.94772 15 9.5 15.4477 9.5 16V21"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5 11V17C5 18.8856 5 19.8284 5.58579 20.4142C6.17157 21 7.11438 21 9 21H15C16.8856 21 17.8284 21 18.4142 20.4142C19 19.8284 19 18.8856 19 17V11"
        stroke="#575757"
        strokeWidth="2"
      />
      <path
        d="M4.62127 4.51493C4.80316 3.78737 4.8941 3.42359 5.16536 3.21179C5.43663 3 5.8116 3 6.56155 3H17.4384C18.1884 3 18.5634 3 18.8346 3.21179C19.1059 3.42359 19.1968 3.78737 19.3787 4.51493L20.5823 9.32938C20.6792 9.71675 20.7276 9.91044 20.7169 10.0678C20.6892 10.4757 20.416 10.8257 20.0269 10.9515C19.8769 11 19.6726 11 19.2641 11V11C18.7309 11 18.4644 11 18.2405 10.9478C17.6133 10.8017 17.0948 10.3625 16.8475 9.76781C16.7593 9.55555 16.7164 9.29856 16.6308 8.78457V8.78457C16.6068 8.64076 16.5948 8.56886 16.5812 8.54994C16.5413 8.49439 16.4587 8.49439 16.4188 8.54994C16.4052 8.56886 16.3932 8.64076 16.3692 8.78457L16.2877 9.27381C16.2791 9.32568 16.2747 9.35161 16.2704 9.37433C16.0939 10.3005 15.2946 10.9777 14.352 10.9995C14.3289 11 14.3026 11 14.25 11V11C14.1974 11 14.1711 11 14.148 10.9995C13.2054 10.9777 12.4061 10.3005 12.2296 9.37433C12.2253 9.35161 12.2209 9.32568 12.2123 9.27381L12.1308 8.78457C12.1068 8.64076 12.0948 8.56886 12.0812 8.54994C12.0413 8.49439 11.9587 8.49439 11.9188 8.54994C11.9052 8.56886 11.8932 8.64076 11.8692 8.78457L11.7877 9.27381C11.7791 9.32568 11.7747 9.35161 11.7704 9.37433C11.5939 10.3005 10.7946 10.9777 9.85199 10.9995C9.82887 11 9.80258 11 9.75 11V11C9.69742 11 9.67113 11 9.64801 10.9995C8.70541 10.9777 7.90606 10.3005 7.7296 9.37433C7.72527 9.35161 7.72095 9.32568 7.7123 9.27381L7.63076 8.78457C7.60679 8.64076 7.59481 8.56886 7.58122 8.54994C7.54132 8.49439 7.45868 8.49439 7.41878 8.54994C7.40519 8.56886 7.39321 8.64076 7.36924 8.78457V8.78457C7.28357 9.29856 7.24074 9.55555 7.15249 9.76781C6.90524 10.3625 6.38675 10.8017 5.75951 10.9478C5.53563 11 5.26905 11 4.73591 11V11C4.32737 11 4.12309 11 3.97306 10.9515C3.58403 10.8257 3.31078 10.4757 3.28307 10.0678C3.27239 9.91044 3.32081 9.71675 3.41765 9.32938L4.62127 4.51493Z"
        stroke="#575757"
        strokeWidth="2"
      />
    </svg>
  );
};

export const AddedtoCartIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16 16H8V13.999L8.073 14H16.775C17.747 14 18.589 13.349 18.799 12.434L19.95 7.434C19.983 7.291 20 7.146 20 7C20 5.895 19.145 5.001 18 5.001V7L16.775 12H8V3C8 2.73478 7.89464 2.48043 7.70711 2.29289C7.51957 2.10536 7.26522 2 7 2H5C4.73478 2 4.48043 2.10536 4.29289 2.29289C4.10536 2.48043 4 2.73478 4 3C4 3.26522 4.10536 3.51957 4.29289 3.70711C4.48043 3.89464 4.73478 4 5 4H6V17C6 17.2652 6.10536 17.5196 6.29289 17.7071C6.48043 17.8946 6.73478 18 7 18H16C16.2652 18 16.5196 17.8946 16.7071 17.7071C16.8946 17.5196 17 17.2652 17 17C17 16.7348 16.8946 16.4804 16.7071 16.2929C16.5196 16.1054 16.2652 16 16 16ZM6.43934 21.5607C6.72064 21.842 7.10218 22 7.5 22C7.89782 22 8.27936 21.842 8.56066 21.5607C8.84196 21.2794 9 20.8978 9 20.5C9 20.1022 8.84196 19.7206 8.56066 19.4393C8.27936 19.158 7.89782 19 7.5 19C7.10218 19 6.72064 19.158 6.43934 19.4393C6.15804 19.7206 6 20.1022 6 20.5C6 20.8978 6.15804 21.2794 6.43934 21.5607ZM15.4393 21.5607C15.7206 21.842 16.1022 22 16.5 22C16.8978 22 17.2794 21.842 17.5607 21.5607C17.842 21.2794 18 20.8978 18 20.5C18 20.1022 17.842 19.7206 17.5607 19.4393C17.2794 19.158 16.8978 19 16.5 19C16.1022 19 15.7206 19.158 15.4393 19.4393C15.158 19.7206 15 20.1022 15 20.5C15 20.8978 15.158 21.2794 15.4393 21.5607ZM16.2071 5.29289C15.8166 4.90237 15.1834 4.90237 14.7929 5.29289L12.5 7.58579L11.2071 6.29289C10.8166 5.90237 10.1834 5.90237 9.79289 6.29289C9.40237 6.68342 9.40237 7.31658 9.79289 7.70711L11.7929 9.70711C12.1834 10.0976 12.8166 10.0976 13.2071 9.70711L16.2071 6.70711C16.5976 6.31658 16.5976 5.68342 16.2071 5.29289Z"
        fill="#575757"
      />
    </svg>
  );
};
export const AddtoCartIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8 16H16C16.2652 16 16.5196 16.1054 16.7071 16.2929C16.8946 16.4804 17 16.7348 17 17C17 17.2652 16.8946 17.5196 16.7071 17.7071C16.5196 17.8946 16.2652 18 16 18H7C6.73478 18 6.48043 17.8946 6.29289 17.7071C6.10536 17.5196 6 17.2652 6 17V4H5C4.73478 4 4.48043 3.89464 4.29289 3.70711C4.10536 3.51957 4 3.26522 4 3C4 2.73478 4.10536 2.48043 4.29289 2.29289C4.48043 2.10536 4.73478 2 5 2H7C7.26522 2 7.51957 2.10536 7.70711 2.29289C7.89464 2.48043 8 2.73478 8 3V12H16.775L18 7V5.001C19.145 5.001 20 5.895 20 7C20 7.146 19.983 7.291 19.95 7.434L18.799 12.434C18.589 13.349 17.747 14 16.775 14H8.073L8 13.999V16ZM7.5 22C7.10218 22 6.72064 21.842 6.43934 21.5607C6.15804 21.2794 6 20.8978 6 20.5C6 20.1022 6.15804 19.7206 6.43934 19.4393C6.72064 19.158 7.10218 19 7.5 19C7.89782 19 8.27936 19.158 8.56066 19.4393C8.84196 19.7206 9 20.1022 9 20.5C9 20.8978 8.84196 21.2794 8.56066 21.5607C8.27936 21.842 7.89782 22 7.5 22ZM16.5 22C16.1022 22 15.7206 21.842 15.4393 21.5607C15.158 21.2794 15 20.8978 15 20.5C15 20.1022 15.158 19.7206 15.4393 19.4393C15.7206 19.158 16.1022 19 16.5 19C16.8978 19 17.2794 19.158 17.5607 19.4393C17.842 19.7206 18 20.1022 18 20.5C18 20.8978 17.842 21.2794 17.5607 21.5607C17.2794 21.842 16.8978 22 16.5 22ZM14 5H15C15.2652 5 15.5196 5.10536 15.7071 5.29289C15.8946 5.48043 16 5.73478 16 6C16 6.26522 15.8946 6.51957 15.7071 6.70711C15.5196 6.89464 15.2652 7 15 7H14V8C14 8.26522 13.8946 8.51957 13.7071 8.70711C13.5196 8.89464 13.2652 9 13 9C12.7348 9 12.4804 8.89464 12.2929 8.70711C12.1054 8.51957 12 8.26522 12 8V7H11C10.7348 7 10.4804 6.89464 10.2929 6.70711C10.1054 6.51957 10 6.26522 10 6C10 5.73478 10.1054 5.48043 10.2929 5.29289C10.4804 5.10536 10.7348 5 11 5H12V4C12 3.73478 12.1054 3.48043 12.2929 3.29289C12.4804 3.10536 12.7348 3 13 3C13.2652 3 13.5196 3.10536 13.7071 3.29289C13.8946 3.48043 14 3.73478 14 4V5Z"
        fill="#575757"
      />
    </svg>
  );
};
export const SettingIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.1361 3.36144L15.1312 3.26194L14.1361 3.36144ZM13.9838 2.54161L13.095 3V3L13.9838 2.54161ZM14.4311 4.81793L15.2261 4.21141L15.2261 4.21141L14.4311 4.81793ZM15.3595 5.20248L15.2261 4.21141L15.3595 5.20248ZM16.5979 4.38113L17.2311 5.15509L17.2311 5.15509L16.5979 4.38113ZM17.2853 3.90918L17.5896 4.86175L17.2853 3.90918ZM17.9872 3.94419L18.3848 3.02663L18.3848 3.02663L17.9872 3.94419ZM18.6243 4.4822L17.9172 5.1893L17.9172 5.18931L18.6243 4.4822ZM19.5178 5.37567L20.2249 4.66856L20.2249 4.66856L19.5178 5.37567ZM20.0558 6.01275L20.9733 5.61517L20.9733 5.61516L20.0558 6.01275ZM20.0908 6.71464L21.0434 7.01895L21.0434 7.01894L20.0908 6.71464ZM19.6188 7.4021L18.8449 6.76886L18.8449 6.76886L19.6188 7.4021ZM18.7975 8.64056L17.8064 8.50724L17.8064 8.50725L18.7975 8.64056ZM19.182 9.56893L18.5755 10.364L18.5755 10.364L19.182 9.56893ZM20.6385 9.86385L20.738 8.86882L20.6385 9.86385ZM21.4584 10.0162L21.9168 9.1275L21.9168 9.1275L21.4584 10.0162ZM21.9299 10.5373L22.8599 10.1696L22.8599 10.1696L21.9299 10.5373ZM21.93 13.4626L21 13.095L21 13.095L21.93 13.4626ZM21.4583 13.9838L21.9166 14.8726L21.9166 14.8726L21.4583 13.9838ZM20.6386 14.1361L20.5391 13.1411L20.5065 13.1444L20.4742 13.1497L20.6386 14.1361ZM20.6386 14.1361L20.7381 15.1312L20.7707 15.1279L20.803 15.1225L20.6386 14.1361ZM19.1825 14.4309L18.5762 13.6357L18.5762 13.6357L19.1825 14.4309ZM18.7979 15.3596L17.8068 15.4931V15.4931L18.7979 15.3596ZM19.619 16.5976L18.845 17.2308H18.845L19.619 16.5976ZM20.0908 17.2848L19.1383 17.5892V17.5892L20.0908 17.2848ZM20.0558 17.9869L19.1383 17.5892L19.1383 17.5892L20.0558 17.9869ZM19.5179 18.6238L20.225 19.3309H20.225L19.5179 18.6238ZM18.6243 19.5174L17.9172 18.8102L17.9172 18.8103L18.6243 19.5174ZM17.9873 20.0554L18.3849 20.9729L18.3849 20.9729L17.9873 20.0554ZM17.2854 20.0904L16.981 21.0429L16.981 21.0429L17.2854 20.0904ZM16.5979 19.6184L17.2312 18.8444L17.2226 18.8376L16.5979 19.6184ZM16.5979 19.6184L15.9646 20.3924L15.9732 20.3993L16.5979 19.6184ZM15.3595 18.7971L15.4928 17.806H15.4928L15.3595 18.7971ZM14.4311 19.1816L15.2262 19.7882L15.2262 19.7881L14.4311 19.1816ZM14.1362 20.6383L13.1411 20.5388V20.5388L14.1362 20.6383ZM13.9837 21.4585L13.095 21L13.095 21L13.9837 21.4585ZM13.4628 21.9299L13.095 21L13.095 21L13.4628 21.9299ZM10.5373 21.9299L10.905 21L10.5373 21.9299ZM10.0162 21.4584L10.905 21H10.905L10.0162 21.4584ZM9.86385 20.6385L8.86882 20.7381V20.7381L9.86385 20.6385ZM9.56892 19.182L8.77387 19.7885L8.77387 19.7885L9.56892 19.182ZM8.64057 18.7975L8.50728 17.8064H8.50727L8.64057 18.7975ZM7.40208 19.6189L6.76884 18.8449L6.753 18.8579L6.73771 18.8714L7.40208 19.6189ZM7.40206 19.6189L8.0353 20.3928L8.05113 20.3799L8.06643 20.3663L7.40206 19.6189ZM6.71458 20.0908L7.01887 21.0434H7.01887L6.71458 20.0908ZM6.01272 20.0558L5.61515 20.9734H5.61515L6.01272 20.0558ZM5.37561 19.5178L6.08271 18.8107H6.08271L5.37561 19.5178ZM4.48217 18.6243L3.77506 19.3315L3.77506 19.3315L4.48217 18.6243ZM3.94414 17.9873L4.86171 17.5897L4.86171 17.5897L3.94414 17.9873ZM3.90913 17.2854L4.86171 17.5897L4.86171 17.5897L3.90913 17.2854ZM4.3811 16.5979L5.15506 17.2311H5.15506L4.3811 16.5979ZM5.20247 15.3594L6.19355 15.4928L5.20247 15.3594ZM4.81792 14.4311L5.42445 13.636L5.42445 13.636L4.81792 14.4311ZM3.36143 14.1361L3.26193 15.1312H3.26193L3.36143 14.1361ZM2.54161 13.9838L3 13.095H3L2.54161 13.9838ZM2.07005 13.4627L1.14009 13.8304L1.14009 13.8304L2.07005 13.4627ZM2.07008 10.5372L1.14017 10.1694L1.14017 10.1694L2.07008 10.5372ZM2.54152 10.0163L2.08305 9.12757L2.08305 9.12757L2.54152 10.0163ZM3.36155 9.86384V8.86384H3.31167L3.26205 8.86881L3.36155 9.86384ZM3.36156 9.86384V10.8638H3.41143L3.46106 10.8589L3.36156 9.86384ZM4.81842 9.56881L4.21178 8.77383L4.21177 8.77383L4.81842 9.56881ZM5.20287 8.64066L6.19396 8.50749L6.19396 8.50749L5.20287 8.64066ZM4.38128 7.40182L5.15523 6.76858H5.15523L4.38128 7.40182ZM3.90914 6.71405L4.86175 6.40988L4.86175 6.40988L3.90914 6.71405ZM3.94413 6.01243L3.02651 5.61498L3.02651 5.61498L3.94413 6.01243ZM4.48233 5.37509L5.18944 6.0822H5.18944L4.48233 5.37509ZM5.37565 4.48177L4.66855 3.77466V3.77466L5.37565 4.48177ZM6.01277 3.94373L5.6152 3.02615L5.6152 3.02616L6.01277 3.94373ZM6.71463 3.90872L7.01892 2.95614V2.95614L6.71463 3.90872ZM7.4022 4.38076L8.03543 3.60681V3.60681L7.4022 4.38076ZM8.64044 5.20207L8.77391 4.21101L8.64044 5.20207ZM9.56907 4.81742L8.77391 4.21101L8.77391 4.21101L9.56907 4.81742ZM9.86387 3.36131L10.8589 3.46081V3.46081L9.86387 3.36131ZM10.0162 2.5417L9.12739 2.08341L9.12739 2.08341L10.0162 2.5417ZM10.5374 2.07001L10.905 3L10.905 3L10.5374 2.07001ZM13.4627 2.07005L13.8304 1.1401V1.1401L13.4627 2.07005ZM15.1312 3.26194C15.1108 3.05831 15.0912 2.85693 15.0626 2.6868C15.0324 2.50684 14.9828 2.29705 14.8725 2.08322L13.095 3C13.0721 2.95549 13.0769 2.93878 13.0902 3.01798C13.1052 3.10701 13.1181 3.23089 13.1411 3.46094L15.1312 3.26194ZM15.2261 4.21141C15.2894 4.29433 15.2693 4.33101 15.2342 4.13595C15.2008 3.95045 15.1739 3.68915 15.1312 3.26194L13.1411 3.46094C13.1805 3.85459 13.2152 4.20895 13.2658 4.49017C13.3147 4.76184 13.4009 5.11633 13.636 5.42445L15.2261 4.21141ZM15.2261 4.21141L15.2261 4.21141L13.636 5.42444C14.0718 5.99575 14.7806 6.28935 15.4928 6.19355L15.2261 4.21141ZM15.9646 3.60717C15.6323 3.87905 15.4286 4.04481 15.2738 4.15238C15.1111 4.26548 15.1228 4.22531 15.2261 4.21141L15.4928 6.19355C15.8768 6.14188 16.1885 5.95223 16.4152 5.7947C16.6498 5.63163 16.9249 5.4056 17.2311 5.15509L15.9646 3.60717ZM16.981 2.95661C16.7518 3.02983 16.5684 3.14308 16.4198 3.24897C16.2793 3.34907 16.123 3.47759 15.9646 3.60717L17.2311 5.15509C17.41 5.00869 17.5068 4.93022 17.5803 4.87784C17.6457 4.83124 17.6373 4.84651 17.5896 4.86175L16.981 2.95661ZM18.3848 3.02663C17.9408 2.83421 17.442 2.80934 16.981 2.95661L17.5896 4.86175L17.5896 4.86175L18.3848 3.02663ZM19.3314 3.77509C19.1867 3.6304 19.044 3.48696 18.9142 3.37338C18.7768 3.25323 18.6056 3.12228 18.3848 3.02663L17.5896 4.86175C17.5437 4.84184 17.5369 4.82581 17.5973 4.87869C17.6653 4.93813 17.7537 5.02583 17.9172 5.1893L19.3314 3.77509ZM20.2249 4.66856L19.3314 3.77509L17.9172 5.18931L18.8107 6.08277L20.2249 4.66856ZM20.9733 5.61516C20.8777 5.39441 20.7467 5.22316 20.6266 5.08581C20.513 4.95597 20.3696 4.81326 20.2249 4.66856L18.8106 6.08277C18.9741 6.24626 19.0618 6.33469 19.1213 6.40264C19.1742 6.46308 19.1581 6.45629 19.1382 6.41034L20.9733 5.61516ZM21.0434 7.01894C21.1906 6.55797 21.1658 6.05922 20.9733 5.61517L19.1382 6.41034L19.1382 6.41034L21.0434 7.01894ZM20.3928 8.03534C20.5224 7.87696 20.6509 7.72069 20.751 7.58019C20.8569 7.43156 20.9701 7.24814 21.0434 7.01895L19.1382 6.41033C19.1535 6.36263 19.1687 6.35427 19.1221 6.41968C19.0697 6.4932 18.9913 6.58992 18.8449 6.76886L20.3928 8.03534ZM19.7885 8.77387C19.7746 8.87723 19.7345 8.88894 19.8476 8.72619C19.9551 8.57141 20.1209 8.36764 20.3928 8.03534L18.8449 6.76886C18.5943 7.07506 18.3683 7.35016 18.2052 7.58481C18.0477 7.81148 17.8581 8.12317 17.8064 8.50724L19.7885 8.77387ZM19.7885 8.77387V8.77386L17.8064 8.50725C17.7106 9.21938 18.0042 9.92816 18.5755 10.364L19.7885 8.77387ZM20.738 8.86882C20.3108 8.82609 20.0495 8.79922 19.864 8.76584C19.6689 8.73073 19.7056 8.7106 19.7885 8.77387L18.5755 10.364C18.8836 10.599 19.2381 10.6853 19.5098 10.7342C19.791 10.7848 20.1454 10.8195 20.539 10.8589L20.738 8.86882ZM21.9168 9.1275C21.703 9.01721 21.4932 8.96759 21.3132 8.93737C21.1431 8.9088 20.9417 8.88918 20.738 8.86882L20.539 10.8589C20.7691 10.8819 20.893 10.8948 20.982 10.9098C21.0612 10.9231 21.0445 10.9279 21 10.905L21.9168 9.1275ZM22.8599 10.1696C22.682 9.71957 22.3469 9.34933 21.9168 9.1275L21 10.905L21 10.905L22.8599 10.1696ZM23 11.3682C23 11.1636 23.0005 10.9613 22.989 10.7891C22.9769 10.607 22.9484 10.3933 22.8599 10.1696L21 10.905C20.9816 10.8584 20.9881 10.8423 20.9935 10.9224C20.9995 11.0125 21 11.137 21 11.3682H23ZM23 12.6319V11.3682H21V12.6319H23ZM22.86 13.8302C22.9484 13.6065 22.9769 13.3929 22.989 13.2108C23.0005 13.0388 23 12.8365 23 12.6319H21C21 12.863 20.9995 12.9875 20.9935 13.0776C20.9881 13.1577 20.9816 13.1416 21 13.095L22.86 13.8302ZM21.9166 14.8726C22.3469 14.6507 22.682 14.2804 22.86 13.8302L21 13.095V13.095L21.9166 14.8726ZM20.7381 15.1312C20.9417 15.1108 21.1431 15.0912 21.3132 15.0626C21.4931 15.0324 21.7028 14.9828 21.9166 14.8726L21 13.095C21.0445 13.0721 21.0612 13.077 20.982 13.0902C20.893 13.1052 20.7691 13.1181 20.5391 13.1411L20.7381 15.1312ZM20.803 15.1225L20.803 15.1225L20.4742 13.1497L20.4742 13.1497L20.803 15.1225ZM19.7889 15.2261C19.706 15.2893 19.6693 15.2692 19.8644 15.2341C20.0498 15.2007 20.311 15.1739 20.7381 15.1312L20.5391 13.1411C20.1456 13.1805 19.7913 13.2151 19.5102 13.2657C19.2386 13.3146 18.8842 13.4008 18.5762 13.6357L19.7889 15.2261ZM19.7889 15.2261L19.7889 15.2261L18.5762 13.6357C18.0046 14.0716 17.7108 14.7807 17.8068 15.4931L19.7889 15.2261ZM20.3929 15.9643C20.1212 15.6322 19.9555 15.4285 19.8479 15.2738C19.7348 15.1111 19.775 15.1228 19.7889 15.2261L17.8068 15.4931C17.8585 15.877 18.0481 16.1886 18.2056 16.4152C18.3686 16.6497 18.5946 16.9247 18.845 17.2308L20.3929 15.9643ZM21.0433 16.9803C20.9701 16.7513 20.8569 16.5679 20.751 16.4193C20.651 16.2789 20.5225 16.1227 20.3929 15.9643L18.845 17.2308C18.9914 17.4097 19.0698 17.5064 19.1222 17.5799C19.1688 17.6453 19.1535 17.6369 19.1383 17.5892L21.0433 16.9803ZM20.9733 18.3846C21.1658 17.9404 21.1907 17.4415 21.0433 16.9803L19.1383 17.5892L19.1383 17.5892L20.9733 18.3846ZM20.225 19.3309C20.3697 19.1862 20.5131 19.0436 20.6266 18.9138C20.7467 18.7765 20.8776 18.6053 20.9733 18.3846L19.1383 17.5892C19.1582 17.5433 19.1742 17.5365 19.1213 17.5969C19.0619 17.6648 18.9742 17.7532 18.8108 17.9167L20.225 19.3309ZM19.3314 20.2245L20.225 19.3309L18.8108 17.9167L17.9172 18.8102L19.3314 20.2245ZM18.3849 20.9729C18.6056 20.8773 18.7769 20.7463 18.9142 20.6262C19.044 20.5126 19.1867 20.3692 19.3314 20.2245L17.9172 18.8103C17.7537 18.9737 17.6653 19.0614 17.5974 19.1209C17.5369 19.1737 17.5437 19.1577 17.5897 19.1378L18.3849 20.9729ZM16.981 21.0429C17.442 21.1902 17.9408 21.1653 18.3849 20.9729L17.5897 19.1378H17.5897L16.981 21.0429ZM15.9647 20.3924C16.1231 20.522 16.2793 20.6505 16.4198 20.7506C16.5684 20.8565 16.7519 20.9697 16.981 21.0429L17.5897 19.1378C17.6374 19.153 17.6457 19.1683 17.5803 19.1217C17.5068 19.0693 17.4101 18.9909 17.2312 18.8445L15.9647 20.3924ZM15.9732 20.3993L15.9732 20.3993L17.2226 18.8376L17.2226 18.8375L15.9732 20.3993ZM15.2262 19.7881C15.1228 19.7742 15.1111 19.7341 15.2738 19.8472C15.4286 19.9547 15.6324 20.1205 15.9647 20.3924L17.2311 18.8445C16.925 18.5939 16.6499 18.3679 16.4152 18.2048C16.1886 18.0473 15.8769 17.8577 15.4928 17.806L15.2262 19.7881ZM15.2262 19.7881H15.2262L15.4928 17.806C14.7807 17.7102 14.0719 18.0038 13.636 18.5751L15.2262 19.7881ZM15.1312 20.7378C15.1739 20.3105 15.2008 20.0492 15.2342 19.8636C15.2693 19.6685 15.2894 19.7052 15.2262 19.7882L13.636 18.5751C13.401 18.8832 13.3147 19.2378 13.2658 19.5094C13.2152 19.7907 13.1805 20.1451 13.1411 20.5388L15.1312 20.7378ZM14.8724 21.917C14.9828 21.7031 15.0324 21.4932 15.0626 21.3132C15.0912 21.143 15.1108 20.9415 15.1312 20.7378L13.1411 20.5388C13.1181 20.769 13.1052 20.8929 13.0902 20.982C13.0769 21.0612 13.072 21.0445 13.095 21L14.8724 21.917ZM13.8306 22.8598C14.2805 22.6819 14.6506 22.3469 14.8724 21.917L13.095 21L13.095 21L13.8306 22.8598ZM12.6316 23C12.8363 23 13.0387 23.0005 13.2109 22.989C13.393 22.9768 13.6068 22.9483 13.8306 22.8598L13.095 21C13.1416 20.9816 13.1577 20.9881 13.0776 20.9935C12.9875 20.9995 12.8629 21 12.6316 21V23ZM11.3682 23H12.6316V21H11.3682V23ZM10.1696 22.8599C10.3933 22.9484 10.607 22.9769 10.7891 22.989C10.9613 23.0005 11.1636 23 11.3682 23V21C11.137 21 11.0125 20.9995 10.9224 20.9935C10.8423 20.9881 10.8584 20.9816 10.905 21L10.1696 22.8599ZM9.1275 21.9168C9.34933 22.3469 9.71958 22.682 10.1696 22.8599L10.905 21L9.1275 21.9168ZM8.86882 20.7381C8.88918 20.9417 8.9088 21.1431 8.93737 21.3132C8.96759 21.4932 9.01721 21.703 9.1275 21.9168L10.905 21C10.9279 21.0445 10.9231 21.0612 10.9098 20.982C10.8948 20.893 10.8819 20.7691 10.8589 20.539L8.86882 20.7381ZM8.77387 19.7885C8.7106 19.7056 8.73073 19.6689 8.76584 19.864C8.79922 20.0495 8.82609 20.3108 8.86882 20.7381L10.8589 20.539C10.8195 20.1454 10.7848 19.791 10.7342 19.5098C10.6853 19.2381 10.599 18.8836 10.364 18.5755L8.77387 19.7885ZM8.77387 19.7885L10.364 18.5755C9.92815 18.0042 9.21939 17.7106 8.50728 17.8064L8.77387 19.7885ZM8.03531 20.3928C8.36763 20.1209 8.5714 19.9551 8.72619 19.8476C8.88895 19.7345 8.87724 19.7746 8.77387 19.7885L8.50727 17.8064C8.12318 17.858 7.81149 18.0477 7.58481 18.2052C7.35015 18.3683 7.07504 18.5944 6.76884 18.8449L8.03531 20.3928ZM8.06643 20.3663L8.06644 20.3663L6.73771 18.8714L6.7377 18.8715L8.06643 20.3663ZM7.01887 21.0434C7.24807 20.9702 7.4315 20.8569 7.58013 20.751C7.72064 20.6509 7.87691 20.5224 8.0353 20.3928L6.76883 18.8449C6.58988 18.9913 6.49316 19.0698 6.41963 19.1222C6.35422 19.1688 6.36258 19.1535 6.41029 19.1383L7.01887 21.0434ZM5.61515 20.9734C6.05919 21.1658 6.55791 21.1907 7.01887 21.0434L6.41029 19.1383L6.41029 19.1383L5.61515 20.9734ZM4.6685 20.2249C4.81321 20.3696 4.95592 20.513 5.08577 20.6266C5.22313 20.7468 5.39438 20.8777 5.61515 20.9734L6.41029 19.1383C6.45624 19.1582 6.46304 19.1742 6.40259 19.1213C6.33464 19.0619 6.2462 18.9742 6.08271 18.8107L4.6685 20.2249ZM3.77506 19.3315L4.6685 20.2249L6.08271 18.8107L5.18927 17.9172L3.77506 19.3315ZM3.02657 18.3848C3.12223 18.6056 3.25318 18.7768 3.37333 18.9142C3.48692 19.044 3.63036 19.1868 3.77506 19.3315L5.18928 17.9172C5.02579 17.7538 4.93809 17.6653 4.87864 17.5974C4.82577 17.5369 4.8418 17.5437 4.86171 17.5897L3.02657 18.3848ZM2.95656 16.9811C2.8093 17.4421 2.83417 17.9408 3.02657 18.3848L4.86171 17.5897V17.5897L2.95656 16.9811ZM3.60715 15.9647C3.47756 16.123 3.34903 16.2793 3.24892 16.4198C3.14303 16.5684 3.02977 16.7519 2.95656 16.9811L4.86171 17.5897C4.84647 17.6374 4.83119 17.6457 4.87779 17.5803C4.93018 17.5068 5.00865 17.4101 5.15506 17.2311L3.60715 15.9647ZM4.2114 15.2261C4.2253 15.1228 4.26548 15.1111 4.15237 15.2738C4.0448 15.4286 3.87903 15.6324 3.60715 15.9647L5.15506 17.2311C5.40558 16.9249 5.63162 16.6498 5.79469 16.4152C5.95222 16.1885 6.14188 15.8768 6.19355 15.4928L4.2114 15.2261ZM4.2114 15.2261L4.2114 15.2261L6.19355 15.4928C6.28934 14.7806 5.99575 14.0718 5.42445 13.636L4.2114 15.2261ZM3.26193 15.1312C3.68915 15.1739 3.95044 15.2008 4.13595 15.2342C4.33101 15.2693 4.29432 15.2894 4.2114 15.2261L5.42445 13.636C5.11633 13.4009 4.76184 13.3147 4.49017 13.2658C4.20894 13.2152 3.85458 13.1805 3.46093 13.1411L3.26193 15.1312ZM2.08323 14.8725C2.29705 14.9828 2.50683 15.0324 2.6868 15.0626C2.85693 15.0912 3.05831 15.1108 3.26193 15.1312L3.46094 13.1411C3.23089 13.1181 3.10701 13.1052 3.01798 13.0902C2.93878 13.0769 2.95549 13.0721 3 13.095L2.08323 14.8725ZM1.14009 13.8304C1.31803 14.2804 1.65311 14.6507 2.08323 14.8725L3 13.095H3L1.14009 13.8304ZM1 12.6318C1 12.8364 0.999483 13.0387 1.01098 13.2109C1.02314 13.393 1.05163 13.6066 1.14009 13.8304L3 13.095C3.01841 13.1416 3.01188 13.1577 3.00653 13.0776C3.00052 12.9875 3 12.863 3 12.6318H1ZM1 11.3683V12.6318H3V11.3683H1ZM1.14017 10.1694C1.05166 10.3932 1.02315 10.607 1.01098 10.7891C0.999483 10.9613 1 11.1637 1 11.3683H3C3 11.1371 3.00052 11.0125 3.00654 10.9224C3.01189 10.8423 3.01842 10.8584 3 10.905L1.14017 10.1694ZM2.08305 9.12757C1.65308 9.34939 1.3181 9.71954 1.14017 10.1694L3 10.905L3 10.905L2.08305 9.12757ZM3.26205 8.86881C3.05837 8.88917 2.85694 8.9088 2.68677 8.93737C2.50676 8.9676 2.29692 9.01724 2.08305 9.12757L3 10.905C2.95548 10.928 2.93877 10.9231 3.01798 10.9098C3.10704 10.8948 3.23094 10.8819 3.46105 10.8589L3.26205 8.86881ZM3.36155 8.86384H3.36155V10.8638H3.36155V8.86384ZM3.36156 8.86384H3.36155V10.8638H3.36156V8.86384ZM4.21177 8.77383C4.29471 8.71055 4.33141 8.73069 4.1363 8.7658C3.95075 8.7992 3.68939 8.82607 3.26205 8.86881L3.46106 10.8589C3.85482 10.8195 4.20927 10.7848 4.49056 10.7342C4.76231 10.6853 5.1169 10.5989 5.42506 10.3638L4.21177 8.77383ZM4.21177 8.77383L4.21178 8.77383L5.42506 10.3638C5.99613 9.92801 6.28962 9.21944 6.19396 8.50749L4.21177 8.77383ZM3.60732 8.03506C3.87929 8.36746 4.04511 8.5713 4.15272 8.72614C4.26586 8.88895 4.22567 8.87724 4.21177 8.77383L6.19396 8.50749C6.14234 8.1233 5.95263 7.81151 5.79506 7.58478C5.63195 7.35006 5.40584 7.07487 5.15523 6.76858L3.60732 8.03506ZM2.95652 7.01822C3.02973 7.24751 3.14303 7.43102 3.24896 7.5797C3.3491 7.72027 3.47768 7.8766 3.60732 8.03506L5.15523 6.76858C5.00876 6.58956 4.93026 6.49279 4.87785 6.41923C4.83123 6.35379 4.84651 6.36215 4.86175 6.40988L2.95652 7.01822ZM3.02651 5.61498C2.83424 6.05887 2.80938 6.5574 2.95652 7.01822L4.86175 6.40988L3.02651 5.61498ZM3.77523 4.66798C3.63047 4.81274 3.48698 4.9555 3.37335 5.08539C3.25316 5.2228 3.12217 5.39412 3.02651 5.61498L4.86175 6.40988C4.84184 6.45585 4.8258 6.46265 4.8787 6.40219C4.93816 6.33421 5.02589 6.24574 5.18944 6.0822L3.77523 4.66798ZM4.66855 3.77466L3.77523 4.66798L5.18944 6.0822L6.08276 5.18888L4.66855 3.77466ZM4.66855 3.77466L4.66855 3.77466L6.08276 5.18888L6.08276 5.18887L4.66855 3.77466ZM5.6152 3.02616C5.39443 3.12181 5.22317 3.25276 5.08582 3.37292C4.95597 3.48651 4.81325 3.62995 4.66855 3.77466L6.08276 5.18887C6.24625 5.02538 6.33469 4.93768 6.40264 4.87824C6.46309 4.82536 6.45629 4.84139 6.41034 4.8613L5.6152 3.02616ZM7.01892 2.95614C6.55795 2.80889 6.05923 2.83377 5.6152 3.02615L6.41033 4.8613H6.41034L7.01892 2.95614ZM8.03543 3.60681C7.87702 3.47719 7.72073 3.34865 7.58021 3.24853C7.43158 3.14264 7.24813 3.02936 7.01892 2.95614L6.41034 4.8613C6.36262 4.84606 6.35426 4.83078 6.41969 4.8774C6.49324 4.9298 6.58999 5.00829 6.76896 5.15472L8.03543 3.60681ZM8.77391 4.21101C8.87727 4.22493 8.88897 4.26509 8.72621 4.15198C8.57144 4.04441 8.36769 3.87865 8.03543 3.60681L6.76896 5.15472C7.07512 5.40521 7.35018 5.63122 7.58477 5.79427C7.81138 5.95176 8.123 6.14141 8.50697 6.19312L8.77391 4.21101ZM8.77391 4.21101L8.77391 4.21101L8.50697 6.19312C9.21932 6.28905 9.92836 5.99536 10.3642 5.42382L8.77391 4.21101ZM8.86883 3.2618C8.82612 3.6889 8.79926 3.95012 8.76589 4.13558C8.7308 4.33059 8.71068 4.29392 8.77391 4.21101L10.3642 5.42382C10.5992 5.11576 10.6854 4.76136 10.7343 4.48976C10.7849 4.20861 10.8196 3.85435 10.8589 3.46081L8.86883 3.2618ZM9.12739 2.08341C9.01716 2.29719 8.96756 2.50692 8.93736 2.68683C8.9088 2.85692 8.88919 3.05824 8.86883 3.2618L10.8589 3.46081C10.8819 3.23082 10.8948 3.10698 10.9098 3.01798C10.923 2.9388 10.9279 2.9555 10.905 3L9.12739 2.08341ZM10.1698 1.14002C9.71962 1.31796 9.34924 1.65315 9.12739 2.08341L10.905 3L10.905 3L10.1698 1.14002ZM11.3681 1C11.1635 1 10.9612 0.999483 10.7892 1.01097C10.6071 1.02313 10.3935 1.05161 10.1698 1.14002L10.905 3C10.8584 3.0184 10.8423 3.01188 10.9224 3.00653C11.0125 3.00052 11.137 3 11.3681 3V1ZM12.6318 1H11.3681V3H12.6318V1ZM13.8304 1.1401C13.6066 1.05163 13.393 1.02314 13.2109 1.01098C13.0387 0.999483 12.8364 1 12.6318 1V3C12.863 3 12.9875 3.00052 13.0776 3.00653C13.1577 3.01188 13.1416 3.01841 13.095 3L13.8304 1.1401ZM14.8725 2.08322C14.6507 1.65312 14.2804 1.31803 13.8304 1.1401L13.095 3L13.095 3L14.8725 2.08322ZM15 12C15 13.6569 13.6569 15 12 15V17C14.7614 17 17 14.7614 17 12H15ZM12 9C13.6569 9 15 10.3431 15 12H17C17 9.23858 14.7614 7 12 7V9ZM9 12C9 10.3431 10.3431 9 12 9V7C9.23858 7 7 9.23858 7 12H9ZM12 15C10.3431 15 9 13.6569 9 12H7C7 14.7614 9.23858 17 12 17V15Z"
        fill="#575757"
      />
    </svg>
  );
};

export const ArrowtopIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 4L11.2929 3.29289L12 2.58579L12.7071 3.29289L12 4ZM13 19C13 19.5523 12.5523 20 12 20C11.4477 20 11 19.5523 11 19L13 19ZM5.29289 9.29289L11.2929 3.29289L12.7071 4.70711L6.70711 10.7071L5.29289 9.29289ZM12.7071 3.29289L18.7071 9.29289L17.2929 10.7071L11.2929 4.70711L12.7071 3.29289ZM13 4L13 19L11 19L11 4L13 4Z"
        fill="#575757"
      />
    </svg>
  );
};
export const ArrowdownIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 20L11.2929 20.7071L12 21.4142L12.7071 20.7071L12 20ZM13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5L13 5ZM5.29289 14.7071L11.2929 20.7071L12.7071 19.2929L6.70711 13.2929L5.29289 14.7071ZM12.7071 20.7071L18.7071 14.7071L17.2929 13.2929L11.2929 19.2929L12.7071 20.7071ZM13 20L13 5L11 5L11 20L13 20Z"
        fill="#575757"
      />
    </svg>
  );
};

export const ArrowleftIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M4 12L3.29289 11.2929L2.58579 12L3.29289 12.7071L4 12ZM19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11V13ZM9.29289 5.29289L3.29289 11.2929L4.70711 12.7071L10.7071 6.70711L9.29289 5.29289ZM3.29289 12.7071L9.29289 18.7071L10.7071 17.2929L4.70711 11.2929L3.29289 12.7071ZM4 13H19V11H4V13Z"
        fill="#575757"
      />
    </svg>
  );
};

export const ArrowrightIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20 12L20.7071 11.2929L21.4142 12L20.7071 12.7071L20 12ZM5 13C4.44771 13 4 12.5523 4 12C4 11.4477 4.44771 11 5 11V13ZM14.7071 5.29289L20.7071 11.2929L19.2929 12.7071L13.2929 6.70711L14.7071 5.29289ZM20.7071 12.7071L14.7071 18.7071L13.2929 17.2929L19.2929 11.2929L20.7071 12.7071ZM20 13H5V11H20V13Z"
        fill="#575757"
      />
    </svg>
  );
};

export const ArrowChevronUpIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18.9263 14.9631L11.9631 7.99996L4.99993 14.9631"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const ArrowChevronDownIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18.9263 8L11.9631 14.9632L4.99993 8"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const ArrowChevronBackIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.9634 5L8.00021 11.9632L14.9634 18.9263"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const ArrowChevronNextIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.00024 5L14.9634 11.9632L8.00024 18.9263"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const CreditcardIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        x="3"
        y="6"
        width="18"
        height="13"
        rx="2"
        stroke="#575757"
        strokeWidth="2"
      />
      <path
        d="M7 15H7.01"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M4 11H21"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const EditIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <mask
        id="path-1-outside-1"
        maskUnits="userSpaceOnUse"
        x="3"
        y="4"
        width="17"
        height="17"
        fill="black"
      >
        <rect fill="white" x="3" y="4" width="17" height="17" />
        <path d="M13.5858 7.41421L6.39171 14.6083C6.19706 14.8029 6.09974 14.9003 6.03276 15.0186C5.96579 15.1368 5.93241 15.2704 5.86564 15.5374L5.20211 18.1915C5.11186 18.5526 5.06673 18.7331 5.16682 18.8332C5.2669 18.9333 5.44742 18.8881 5.80844 18.7979L5.80845 18.7979L8.46257 18.1344C8.72963 18.0676 8.86316 18.0342 8.98145 17.9672C9.09974 17.9003 9.19706 17.8029 9.39171 17.6083L16.5858 10.4142L16.5858 10.4142C17.2525 9.74755 17.5858 9.41421 17.5858 9C17.5858 8.58579 17.2525 8.25245 16.5858 7.58579L16.4142 7.41421C15.7475 6.74755 15.4142 6.41421 15 6.41421C14.5858 6.41421 14.2525 6.74755 13.5858 7.41421Z" />
      </mask>
      <path
        d="M6.39171 14.6083L7.80593 16.0225L7.80593 16.0225L6.39171 14.6083ZM13.5858 7.41421L12.1716 6L12.1716 6L13.5858 7.41421ZM16.4142 7.41421L15 8.82843L15 8.82843L16.4142 7.41421ZM16.5858 7.58579L18 6.17157L18 6.17157L16.5858 7.58579ZM16.5858 10.4142L18 11.8284L16.5858 10.4142ZM9.39171 17.6083L7.9775 16.1941L7.9775 16.1941L9.39171 17.6083ZM5.86564 15.5374L7.80593 16.0225L7.80593 16.0225L5.86564 15.5374ZM5.20211 18.1915L3.26183 17.7065H3.26183L5.20211 18.1915ZM5.80845 18.7979L5.32338 16.8576L5.23624 16.8794L5.15141 16.9089L5.80845 18.7979ZM8.46257 18.1344L7.97751 16.1941L7.9775 16.1941L8.46257 18.1344ZM5.16682 18.8332L6.58103 17.419L6.58103 17.419L5.16682 18.8332ZM5.80844 18.7979L6.29351 20.7382L6.38065 20.7164L6.46549 20.6869L5.80844 18.7979ZM8.98145 17.9672L7.99605 16.2268L7.99605 16.2268L8.98145 17.9672ZM16.5858 10.4142L18 11.8284L18 11.8284L16.5858 10.4142ZM6.03276 15.0186L4.29236 14.0332L4.29236 14.0332L6.03276 15.0186ZM7.80593 16.0225L15 8.82843L12.1716 6L4.9775 13.1941L7.80593 16.0225ZM15 8.82843L15.1716 9L18 6.17157L17.8284 6L15 8.82843ZM15.1716 9L7.9775 16.1941L10.8059 19.0225L18 11.8284L15.1716 9ZM3.92536 15.0524L3.26183 17.7065L7.1424 18.6766L7.80593 16.0225L3.92536 15.0524ZM6.29352 20.7382L8.94764 20.0746L7.9775 16.1941L5.32338 16.8576L6.29352 20.7382ZM3.26183 17.7065C3.233 17.8218 3.15055 18.1296 3.12259 18.4155C3.0922 18.7261 3.06509 19.5599 3.7526 20.2474L6.58103 17.419C6.84671 17.6847 6.99914 18.0005 7.06644 18.2928C7.12513 18.5478 7.10965 18.7429 7.10358 18.8049C7.09699 18.8724 7.08792 18.904 7.097 18.8631C7.10537 18.8253 7.11788 18.7747 7.1424 18.6766L3.26183 17.7065ZM5.15141 16.9089L5.1514 16.9089L6.46549 20.6869L6.46549 20.6869L5.15141 16.9089ZM5.32338 16.8576C5.22531 16.8821 5.17467 16.8946 5.13694 16.903C5.09595 16.9121 5.12762 16.903 5.19506 16.8964C5.25712 16.8903 5.45223 16.8749 5.70717 16.9336C5.99955 17.0009 6.31535 17.1533 6.58103 17.419L3.7526 20.2474C4.44011 20.9349 5.27387 20.9078 5.58449 20.8774C5.87039 20.8494 6.17822 20.767 6.29351 20.7382L5.32338 16.8576ZM7.9775 16.1941C7.95279 16.2188 7.9317 16.2399 7.91214 16.2593C7.89271 16.2787 7.87671 16.2945 7.86293 16.308C7.84916 16.3215 7.83911 16.3312 7.83172 16.3382C7.82812 16.3416 7.82545 16.3441 7.8236 16.3458C7.82176 16.3475 7.8209 16.3483 7.82092 16.3482C7.82094 16.3482 7.82198 16.3473 7.82395 16.3456C7.82592 16.3439 7.82893 16.3413 7.83291 16.338C7.84086 16.3314 7.85292 16.3216 7.86866 16.3098C7.88455 16.2979 7.90362 16.2843 7.92564 16.2699C7.94776 16.2553 7.97131 16.2408 7.99605 16.2268L9.96684 19.7076C10.376 19.476 10.6864 19.1421 10.8059 19.0225L7.9775 16.1941ZM8.94764 20.0746C9.11169 20.0336 9.55771 19.9393 9.96685 19.7076L7.99605 16.2268C8.02079 16.2128 8.0453 16.2001 8.06917 16.1886C8.09292 16.1772 8.11438 16.1678 8.13277 16.1603C8.15098 16.1529 8.16553 16.1475 8.17529 16.1441C8.18017 16.1424 8.18394 16.1412 8.18642 16.1404C8.1889 16.1395 8.19024 16.1391 8.19026 16.1391C8.19028 16.1391 8.18918 16.1395 8.18677 16.1402C8.18435 16.1409 8.18084 16.1419 8.17606 16.1432C8.16625 16.1459 8.15278 16.1496 8.13414 16.1544C8.11548 16.1593 8.09368 16.1649 8.0671 16.1716C8.04034 16.1784 8.0114 16.1856 7.97751 16.1941L8.94764 20.0746ZM15.1716 9C15.3435 9.17192 15.4698 9.29842 15.5738 9.40785C15.6786 9.518 15.7263 9.57518 15.7457 9.60073C15.7644 9.62524 15.7226 9.57638 15.6774 9.46782C15.6254 9.34332 15.5858 9.18102 15.5858 9H19.5858C19.5858 8.17978 19.2282 7.57075 18.9258 7.1744C18.6586 6.82421 18.2934 6.46493 18 6.17157L15.1716 9ZM18 11.8284L18 11.8284L15.1716 8.99999L15.1716 9L18 11.8284ZM18 11.8284C18.2934 11.5351 18.6586 11.1758 18.9258 10.8256C19.2282 10.4292 19.5858 9.82022 19.5858 9H15.5858C15.5858 8.81898 15.6254 8.65668 15.6774 8.53218C15.7226 8.42362 15.7644 8.37476 15.7457 8.39927C15.7263 8.42482 15.6786 8.482 15.5738 8.59215C15.4698 8.70157 15.3435 8.82807 15.1716 9L18 11.8284ZM15 8.82843C15.1719 8.6565 15.2984 8.53019 15.4078 8.42615C15.518 8.32142 15.5752 8.27375 15.6007 8.25426C15.6252 8.23555 15.5764 8.27736 15.4678 8.32264C15.3433 8.37455 15.181 8.41421 15 8.41421V4.41421C14.1798 4.41421 13.5707 4.77177 13.1744 5.07417C12.8242 5.34136 12.4649 5.70664 12.1716 6L15 8.82843ZM17.8284 6C17.5351 5.70665 17.1758 5.34136 16.8256 5.07417C16.4293 4.77177 15.8202 4.41421 15 4.41421V8.41421C14.819 8.41421 14.6567 8.37455 14.5322 8.32264C14.4236 8.27736 14.3748 8.23555 14.3993 8.25426C14.4248 8.27375 14.482 8.32142 14.5922 8.42615C14.7016 8.53019 14.8281 8.6565 15 8.82843L17.8284 6ZM4.9775 13.1941C4.85793 13.3136 4.52401 13.624 4.29236 14.0332L7.77316 16.0039C7.75915 16.0287 7.7447 16.0522 7.73014 16.0744C7.71565 16.0964 7.70207 16.1155 7.69016 16.1313C7.67837 16.1471 7.66863 16.1591 7.66202 16.1671C7.65871 16.1711 7.65613 16.1741 7.65442 16.1761C7.65271 16.178 7.65178 16.1791 7.65176 16.1791C7.65174 16.1791 7.65252 16.1782 7.65422 16.1764C7.65593 16.1745 7.65842 16.1719 7.66184 16.1683C7.66884 16.1609 7.67852 16.1508 7.692 16.1371C7.7055 16.1233 7.72132 16.1073 7.74066 16.0879C7.76013 16.0683 7.78122 16.0472 7.80593 16.0225L4.9775 13.1941ZM7.80593 16.0225C7.8144 15.9886 7.82164 15.9597 7.82839 15.9329C7.8351 15.9063 7.84068 15.8845 7.84556 15.8659C7.85043 15.8472 7.85407 15.8337 7.8568 15.8239C7.85813 15.8192 7.85914 15.8157 7.85984 15.8132C7.86054 15.8108 7.86088 15.8097 7.86088 15.8097C7.86087 15.8098 7.86046 15.8111 7.85965 15.8136C7.85884 15.8161 7.85758 15.8198 7.85588 15.8247C7.85246 15.8345 7.84713 15.849 7.8397 15.8672C7.8322 15.8856 7.82284 15.9071 7.81141 15.9308C7.79993 15.9547 7.78717 15.9792 7.77316 16.0039L4.29236 14.0332C4.06071 14.4423 3.96637 14.8883 3.92536 15.0524L7.80593 16.0225Z"
        fill="#575757"
        mask="url(#path-1-outside-1)"
      />
      <path
        d="M12.5 7.5L15.5 5.5L18.5 8.5L16.5 11.5L12.5 7.5Z"
        fill="#575757"
      />
    </svg>
  );
};

export const FilterIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M20.6274 3.60938H3.37275C2.79853 3.60938 2.43994 4.23516 2.72822 4.73438L8.17978 14.0016V19.6406C8.17978 20.0555 8.51259 20.3906 8.92509 20.3906H15.0751C15.4876 20.3906 15.8204 20.0555 15.8204 19.6406V14.0016L21.2743 4.73438C21.5602 4.23516 21.2017 3.60938 20.6274 3.60938ZM14.1423 18.7031H9.85791V15.0469H14.1446V18.7031H14.1423ZM14.3673 13.1578L14.1446 13.5469H9.85556L9.63291 13.1578L4.98525 5.29688H19.0149L14.3673 13.1578Z"
        fill="#575757"
      />
    </svg>
  );
};

export const PlusIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 6V18"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6 12L18 12"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const MinusIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6 12L18 12"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const ShareIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.4141 8C19.0709 8 20.4141 6.65685 20.4141 5C20.4141 3.34315 19.0709 2 17.4141 2C15.7572 2 14.4141 3.34315 14.4141 5C14.4141 6.65685 15.7572 8 17.4141 8Z"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M5.41406 15C7.07092 15 8.41406 13.6569 8.41406 12C8.41406 10.3431 7.07092 9 5.41406 9C3.75721 9 2.41406 10.3431 2.41406 12C2.41406 13.6569 3.75721 15 5.41406 15Z"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M17.4141 22C19.0709 22 20.4141 20.6569 20.4141 19C20.4141 17.3431 19.0709 16 17.4141 16C15.7572 16 14.4141 17.3431 14.4141 19C14.4141 20.6569 15.7572 22 17.4141 22Z"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.00415 13.51L14.8342 17.49"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M14.8242 6.51001L8.00415 10.49"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const RemoveIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M10 15L10 12"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M14 15L14 12"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M3 7H21V7C20.0681 7 19.6022 7 19.2346 7.15224C18.7446 7.35523 18.3552 7.74458 18.1522 8.23463C18 8.60218 18 9.06812 18 10V16C18 17.8856 18 18.8284 17.4142 19.4142C16.8284 20 15.8856 20 14 20H10C8.11438 20 7.17157 20 6.58579 19.4142C6 18.8284 6 17.8856 6 16V10C6 9.06812 6 8.60218 5.84776 8.23463C5.64477 7.74458 5.25542 7.35523 4.76537 7.15224C4.39782 7 3.93188 7 3 7V7Z"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M10.0681 3.37059C10.1821 3.26427 10.4332 3.17033 10.7825 3.10332C11.1318 3.03632 11.5597 3 12 3C12.4403 3 12.8682 3.03632 13.2175 3.10332C13.5668 3.17033 13.8179 3.26427 13.9319 3.37059"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const MoreIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="5" cy="12" r="2" fill="#575757" />
      <circle cx="12" cy="12" r="2" fill="#575757" />
      <circle cx="19" cy="12" r="2" fill="#575757" />
    </svg>
  );
};

export const CameraIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M3 9.8541C3 8.83011 3.83011 8 4.8541 8V8C5.55638 8 6.19839 7.60322 6.51246 6.97508L7.33333 5.33333C7.44329 5.11342 7.49827 5.00346 7.56062 4.90782C7.8859 4.40882 8.41668 4.08078 9.00848 4.01299C9.1219 4 9.24484 4 9.49071 4H14.5093C14.7552 4 14.8781 4 14.9915 4.01299C15.5833 4.08078 16.1141 4.40882 16.4394 4.90782C16.5017 5.00346 16.5567 5.11342 16.6667 5.33333L17.4875 6.97508C17.8016 7.60322 18.4436 8 19.1459 8V8C20.1699 8 21 8.83011 21 9.8541V14.8571C21 16.8619 21 17.8643 20.5402 18.5961C20.3004 18.9777 19.9777 19.3004 19.5961 19.5402C18.8643 20 17.8619 20 15.8571 20H8.14286C6.1381 20 5.13571 20 4.4039 19.5402C4.02229 19.3004 3.69961 18.9777 3.45983 18.5961C3 17.8643 3 16.8619 3 14.8571V9.8541Z"
        stroke="#575757"
        strokeWidth="2"
      />
      <circle cx="12" cy="13" r="3" stroke="#575757" strokeWidth="2" />
    </svg>
  );
};

export const UserIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g clip-path="url(#clip0)">
        <path
          d="M19.7274 20.4471C19.2716 19.1713 18.2672 18.0439 16.8701 17.2399C15.4729 16.4358 13.7611 16 12 16C10.2389 16 8.52706 16.4358 7.12991 17.2399C5.73276 18.0439 4.72839 19.1713 4.27259 20.4471"
          stroke="#575757"
          strokeWidth="2"
          strokeLinecap="round"
        />
        <circle
          cx="12"
          cy="8"
          r="4"
          stroke="#575757"
          strokeWidth="2"
          strokeLinecap="round"
        />
      </g>
      <defs>
        <clipPath id="clip0">
          <rect width="24" height="24" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

export const LanguageIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="12" cy="12" r="8" stroke="#575757" strokeWidth="2" />
      <path
        d="M6.63562 1.6525C5.6444 1.43935 4.83857 1.54374 4.31305 2.01691C2.48331 3.66443 4.74475 9.15897 9.36413 14.2893C13.9835 19.4197 19.2116 22.243 21.0413 20.5955C21.7434 19.9634 21.8431 18.7649 21.4385 17.2379"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <circle cx="14" cy="10" r="2" stroke="#575757" strokeWidth="2" />
    </svg>
  );
};

export const BankIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.82445 5.47263C4.49105 5.65576 4.28353 6.00775 4.28353 6.39026V7.57493H3.03797C2.46473 7.57493 2 8.04294 2 8.62022C2 9.1975 2.46473 9.66552 3.03797 9.66552H4.28353V19.9094H3.10716C2.53393 19.9094 2.0692 20.3774 2.0692 20.9547C2.0692 21.532 2.53393 22 3.10716 22H20.962C21.5353 22 22 21.532 22 20.9547C22 20.3774 21.5353 19.9094 20.962 19.9094H19.7165V9.66552H20.962C21.5353 9.66552 22 9.1975 22 8.62022C22 8.04294 21.5353 7.57493 20.962 7.57493H19.7857V6.39026C19.7857 6.00775 19.5781 5.65576 19.2448 5.47263L12.3195 2.12768C12.0097 1.95744 11.6352 1.95744 11.3254 2.12768L4.82445 5.47263ZM11.8224 4.23597L6.35946 7.01074V7.57492H17.7097V7.01074L11.8224 4.23597ZM10.7845 9.66551H6.35946V19.9094H10.7845V9.66551ZM12.8604 19.9094V9.66551H17.6405V19.9094H12.8604Z"
        fill="#575757"
      />
    </svg>
  );
};

export const FPSIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M16 9.6V8C16 6.89543 15.1046 6 14 6H4C2.89543 6 2 6.89543 2 8V13C2 14.1046 2.89543 15 4 15H7.125"
        stroke="#575757"
        strokeWidth="2"
      />
      <rect
        x="7"
        y="10"
        width="15"
        height="9"
        rx="2"
        stroke="#575757"
        strokeWidth="2"
      />
      <circle cx="14.5" cy="14.5" r="1.5" stroke="#575757" strokeWidth="2" />
    </svg>
  );
};

export const PhoneIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17.7071 13.7071L20.3552 16.3552C20.7113 16.7113 20.7113 17.2887 20.3552 17.6448C18.43 19.57 15.3821 19.7866 13.204 18.153L11.6286 16.9714C9.88504 15.6638 8.33622 14.115 7.02857 12.3714L5.84701 10.796C4.21341 8.61788 4.43001 5.56999 6.35523 3.64477C6.71133 3.28867 7.28867 3.28867 7.64477 3.64477L10.2929 6.29289C10.6834 6.68342 10.6834 7.31658 10.2929 7.70711L9.27175 8.72825C9.10946 8.89054 9.06923 9.13846 9.17187 9.34373C10.3585 11.7171 12.2829 13.6415 14.6563 14.8281C14.8615 14.9308 15.1095 14.8905 15.2717 14.7283L16.2929 13.7071C16.6834 13.3166 17.3166 13.3166 17.7071 13.7071Z"
        stroke="#575757"
        strokeWidth="2"
      />
    </svg>
  );
};

export const QuestionIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="12" cy="12" r="9" stroke="#575757" strokeWidth="2" />
      <circle cx="12" cy="18" r="0.5" fill="#575757" stroke="#575757" />
      <path
        d="M12 16V14.5811C12 13.6369 12.6042 12.7986 13.5 12.5V12.5C14.3958 12.2014 15 11.3631 15 10.4189V9.90569C15 8.30092 13.6991 7 12.0943 7H12C10.3431 7 9 8.34315 9 10V10"
        stroke="#575757"
        strokeWidth="2"
      />
    </svg>
  );
};

export const PolicyIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M17.1726 3H17.1536H17.1238H17.094H17.0641H17.0341H17.0039H16.9737H16.9434H16.913H16.8825H16.8518H16.8212H16.7904H16.7595H16.7285H16.6975H16.6663H16.6351H16.6038H16.5723H16.5409H16.5093H16.4776H16.4459H16.4141H16.3822H16.3502H16.3181H16.286H16.2538H16.2215H16.1891H16.1567H16.1242H16.0916H16.059H16.0262H15.9934H15.9606H15.9276H15.8947H15.8616H15.8285H15.7953H15.762H15.7287H15.6953H15.6619H15.6284H15.5948H15.5612H15.5276H15.4938H15.4601H15.4262H15.3923H15.3584H15.3244H15.2904H15.2563H15.2221H15.1879H15.1537H15.1194H15.0851H15.0507H15.0163H14.9819H14.9474H14.9128H14.8782H14.8436H14.809H14.7743H14.7395H14.7048H14.67H14.6351H14.6003H14.5654H14.5304H14.4955H14.4605H14.4255H14.3904H14.3554H14.3203H14.2851H14.25H14.2148H14.1796H14.1444H14.1092H14.074H14.0387H14.0034H13.9681H13.9328H13.8974H13.8621H13.8267H13.7914H13.756H13.7206H13.6852H13.6498H13.6143H13.5789H13.5435H13.5081H13.4726H13.4372H13.4017H13.3663H13.3308H13.2954H13.2599H13.2245H13.189H13.1536H13.1182H13.0827H13.0473H13.0119H12.9765H12.9411H12.9057H12.8703H12.835H12.7996H12.7643H12.729H12.6937H12.6584H12.6231H12.5878H12.5526H12.5174H12.4822H12.447H12.4119H12.3768H12.3417H12.3066H12.2715H12.2365H12.2015H12.1665H12.1316H12.0967H12.0618H12.027H11.9922H11.9574H11.9227H11.888H11.8533H11.8187H11.7841H11.7495H11.715H11.6806H11.6462H11.6118H11.5774H11.5431H11.5089H11.4747H11.4406H11.4065H11.3724H11.3384H11.3044H11.2705H11.2367H11.2029H11.1692H11.1355H11.1019H11.0683H11.0348H11.0013H10.968H10.9346H10.9014H10.8682H10.835H10.802H10.7689H10.736H10.7031H10.6703H10.6376H10.6049H10.5723H10.5398H10.5074H10.475H10.4427H10.4104H10.3783H10.3462H10.3142H10.2823H10.2505H10.2187H10.187H10.1555H10.1239H10.0925H10.0612H10.0299H9.99877H9.96769H9.93671H9.90581H9.875H9.84428H9.81366H9.78313H9.7527H9.72235H9.69211H9.66196H9.63191H9.60196H9.57211H9.54236H9.51271H9.48316H9.45372H9.42438H9.39514H9.36601H9.33699H9.30807H9.27927H9.25057H9.22198H9.19351H9.16515H9.1369H9.10876H9.08074H9.05283H9.02504H8.99737H8.96982H8.94238H8.91507H8.88788H8.8608H8.83386H8.80703H8.78033H8.75376H8.72731H8.70099H8.6748H8.64873H8.6228H8.597H8.57133H8.54579H8.52039H8.49512H8.46998H8.44498H8.42012H8.3954H8.37082H8.34637H8.32207H8.29791H8.27389H8.25001H8.22628H8.20269H8.17925H8.15596H8.13281H8.10982H8.08697H8.06427H8.04173H8.01933H7.9971H7.97501H7.95308H7.9313H7.90969H7.88823H7.86693H7.84578H7.8248H7.80398H7.78333H7.76283H7.7425H7.72233H7.70233H7.6825H7.66283H7.64334H7.62401H7.60485H7.58586H7.56705H7.54841H7.52994H7.51165H7.49353H7.47559H7.45782H7.44024H7.42283H7.4056H7.38856H7.37169H7.35501H7.33852H7.3222H7.30608H7.29014H7.27438H7.25882H7.24344H7.22825H7.21326H7.19845H7.18384H7.16942H7.1552H7.14117H7.12734H7.1137H7.10027H7.08703H7.07399H7.06115H7.04851H7.03608H7.02385H7.01182H7C6.67498 3 6.4977 3.07838 6.39845 3.14455C6.29294 3.21489 6.21011 3.31584 6.14443 3.44721C6.07678 3.5825 6.03798 3.72989 6.01764 3.8519C6.00787 3.91053 6.00337 3.95721 6.00136 3.98531C6.00053 3.99696 6.00016 4.00504 6 4.00902V16H14C14.5523 16 15 16.4477 15 17V19.991C15.0002 19.995 15.0005 20.003 15.0014 20.0147C15.0034 20.0428 15.0079 20.0895 15.0176 20.1481C15.038 20.2701 15.0768 20.4175 15.1444 20.5528C15.2101 20.6842 15.2929 20.7851 15.3984 20.8554C15.4977 20.9216 15.675 21 16 21C16.325 21 16.5023 20.9216 16.6016 20.8554C16.7071 20.7851 16.7899 20.6842 16.8556 20.5528C16.9232 20.4175 16.962 20.2701 16.9824 20.1481C16.9921 20.0895 16.9966 20.0428 16.9986 20.0147C16.9995 20.003 16.9998 19.995 17 19.991V7V4H18C17 4 17 3.9995 17 3.999L17 3.99795L17 3.9957L17 3.99061L17.0002 3.97814C17.0003 3.96881 17.0006 3.95746 17.001 3.94422C17.0019 3.91778 17.0035 3.88362 17.0064 3.84282C17.0123 3.76154 17.0234 3.65197 17.0449 3.5231C17.0693 3.37651 17.1085 3.19646 17.1726 3ZM4 16V4H5C4 4 4 3.9995 4 3.999L4 3.99795L4.00001 3.9957L4.00004 3.99061L4.00019 3.97814C4.00034 3.96881 4.0006 3.95746 4.00104 3.94422C4.00192 3.91778 4.00353 3.88362 4.00645 3.84282C4.01225 3.76154 4.02338 3.65197 4.04486 3.5231C4.08702 3.27011 4.17322 2.9175 4.35557 2.55279C4.53989 2.18416 4.83206 1.78511 5.28905 1.48045C5.7523 1.17162 6.32502 1 7 1H7.01182H7.02385H7.03608H7.04851H7.06115H7.07399H7.08703H7.10027H7.1137H7.12734H7.14117H7.1552H7.16942H7.18384H7.19845H7.21326H7.22825H7.24344H7.25882H7.27438H7.29014H7.30608H7.3222H7.33852H7.35501H7.37169H7.38856H7.4056H7.42283H7.44024H7.45782H7.47559H7.49353H7.51165H7.52994H7.54841H7.56705H7.58586H7.60485H7.62401H7.64334H7.66283H7.6825H7.70233H7.72233H7.7425H7.76283H7.78333H7.80398H7.8248H7.84578H7.86693H7.88823H7.90969H7.9313H7.95308H7.97501H7.9971H8.01933H8.04173H8.06427H8.08697H8.10982H8.13281H8.15596H8.17925H8.20269H8.22628H8.25001H8.27389H8.29791H8.32207H8.34637H8.37082H8.3954H8.42012H8.44498H8.46998H8.49512H8.52039H8.54579H8.57133H8.597H8.6228H8.64873H8.6748H8.70099H8.72731H8.75376H8.78033H8.80703H8.83386H8.8608H8.88788H8.91507H8.94238H8.96982H8.99737H9.02504H9.05283H9.08074H9.10876H9.1369H9.16515H9.19351H9.22198H9.25057H9.27927H9.30807H9.33699H9.36601H9.39514H9.42438H9.45372H9.48316H9.51271H9.54236H9.57211H9.60196H9.63191H9.66196H9.69211H9.72235H9.7527H9.78313H9.81366H9.84428H9.875H9.90581H9.93671H9.96769H9.99877H10.0299H10.0612H10.0925H10.1239H10.1555H10.187H10.2187H10.2505H10.2823H10.3142H10.3462H10.3783H10.4104H10.4427H10.475H10.5074H10.5398H10.5723H10.6049H10.6376H10.6703H10.7031H10.736H10.7689H10.802H10.835H10.8682H10.9014H10.9346H10.968H11.0013H11.0348H11.0683H11.1019H11.1355H11.1692H11.2029H11.2367H11.2705H11.3044H11.3384H11.3724H11.4065H11.4406H11.4747H11.5089H11.5431H11.5774H11.6118H11.6462H11.6806H11.715H11.7495H11.7841H11.8187H11.8533H11.888H11.9227H11.9574H11.9922H12.027H12.0618H12.0967H12.1316H12.1665H12.2015H12.2365H12.2715H12.3066H12.3417H12.3768H12.4119H12.447H12.4822H12.5174H12.5526H12.5878H12.6231H12.6584H12.6937H12.729H12.7643H12.7996H12.835H12.8703H12.9057H12.9411H12.9765H13.0119H13.0473H13.0827H13.1182H13.1536H13.189H13.2245H13.2599H13.2954H13.3308H13.3663H13.4017H13.4372H13.4726H13.5081H13.5435H13.5789H13.6143H13.6498H13.6852H13.7206H13.756H13.7914H13.8267H13.8621H13.8974H13.9328H13.9681H14.0034H14.0387H14.074H14.1092H14.1444H14.1796H14.2148H14.25H14.2851H14.3203H14.3554H14.3904H14.4255H14.4605H14.4955H14.5304H14.5654H14.6003H14.6351H14.67H14.7048H14.7395H14.7743H14.809H14.8436H14.8782H14.9128H14.9474H14.9819H15.0163H15.0507H15.0851H15.1194H15.1537H15.1879H15.2221H15.2563H15.2904H15.3244H15.3584H15.3923H15.4262H15.4601H15.4938H15.5276H15.5612H15.5948H15.6284H15.6619H15.6953H15.7287H15.762H15.7953H15.8285H15.8616H15.8947H15.9276H15.9606H15.9934H16.0262H16.059H16.0916H16.1242H16.1567H16.1891H16.2215H16.2538H16.286H16.3181H16.3502H16.3822H16.4141H16.4459H16.4776H16.5093H16.5409H16.5723H16.6038H16.6351H16.6663H16.6975H16.7285H16.7595H16.7904H16.8212H16.8518H16.8825H16.913H16.9434H16.9737H17.0039H17.0341H17.0641H17.094H17.1238H17.1536H17.1832H17.2127H17.2422H17.2715H17.3007H17.3298H17.3588H17.3877H17.4165H17.4452H17.4737H17.5022H17.5305H17.5587H17.5869H17.6149H17.6427H17.6705H17.6982H17.7257H17.7531H17.7804H17.8075H17.8346H17.8615H17.8883H17.915H17.9415H17.968H17.9943H18.0204H18.0465H18.0724H18.0981H18.1238H18.1493H18.1747H18.1999H18.225H18.25H18.2748H18.2995H18.3241H18.3485H18.3728H18.3969H18.4209H18.4447H18.4685H18.492H18.5154H18.5387H18.5618H18.5848H18.6076H18.6302H18.6528H18.6751H18.6973H18.7194H18.7413H18.763H18.7846H18.806H18.8273H18.8484H18.8694H18.8902H18.9108H18.9312H18.9515H18.9717H18.9916H19.0114H19.0311H19.0505H19.0698H19.089H19.1079H19.1267H19.1453H19.1637H19.182H19.2001H19.218H19.2357H19.2533H19.2706H19.2878H19.3048H19.3217H19.3383H19.3548H19.371H19.3871H19.403H19.4187H19.4343H19.4496H19.4648H19.4797H19.4945H19.5091H19.5234H19.5376H19.5516H19.5654H19.579H19.5924H19.6056H19.6186H19.6314H19.644H19.6564H19.6686H19.6806H19.6923H19.7039H19.7153H19.7264H19.7374H19.7481H19.7587H19.769H19.7791H19.789H19.7987H19.8081H19.8174H19.8264H19.8352H19.8438H19.8522H19.8603H19.8683H19.876H19.8835H19.8907H19.8978H19.9046H19.9112H19.9175H19.9236H19.9296H19.9352H19.9407H19.9459H19.9508H19.9556H19.9601H19.9644H19.9684H19.9722H19.9757H19.9791H19.9821H19.985H19.9876H19.9899H19.992H19.9939H19.9955H19.9969H19.998H19.9989H19.9995H19.9999C19.9999 1 20 1 20 1C20.675 1 21.2477 1.17162 21.711 1.48045C22.1679 1.78511 22.4601 2.18416 22.6444 2.55279C22.8268 2.9175 22.913 3.27011 22.9551 3.5231C22.9766 3.65197 22.9877 3.76154 22.9936 3.84282C22.9965 3.88362 22.9981 3.91778 22.999 3.94422L22.9995 3.9625L22.9998 3.97814L23 3.99061L23 3.9957L23 3.99795L23 3.999C23 3.9995 23 4 22 4H23V7C23 7.55228 22.5523 8 22 8H19V20H18C19 20 19 20.0005 19 20.001L19 20.0021L19 20.0043L19 20.0094L18.9998 20.0219C18.9997 20.0312 18.9994 20.0425 18.999 20.0558C18.9981 20.0822 18.9965 20.1164 18.9936 20.1572C18.9877 20.2385 18.9766 20.348 18.9551 20.4769C18.913 20.7299 18.8268 21.0825 18.6444 21.4472C18.4601 21.8158 18.1679 22.2149 17.7109 22.5196C17.2477 22.8284 16.675 23 16 23H15.9882H15.9763H15.9642H15.952H15.9397H15.9272H15.9146H15.9019H15.889H15.876H15.8629H15.8496H15.8362H15.8227H15.8091H15.7953H15.7814H15.7673H15.7532H15.7389H15.7245H15.7099H15.6952H15.6804H15.6655H15.6505H15.6353H15.62H15.6046H15.5891H15.5734H15.5576H15.5417H15.5257H15.5096H15.4933H15.4769H15.4604H15.4438H15.4271H15.4103H15.3933H15.3762H15.3591H15.3418H15.3243H15.3068H15.2892H15.2714H15.2536H15.2356H15.2175H15.1993H15.181H15.1626H15.1441H15.1255H15.1068H15.0879H15.069H15.0499H15.0308H15.0115H14.9922H14.9727H14.9532H14.9335H14.9137H14.8939H14.8739H14.8538H14.8337H14.8134H14.793H14.7726H14.752H14.7314H14.7106H14.6898H14.6688H14.6478H14.6267H14.6054H14.5841H14.5627H14.5412H14.5196H14.4979H14.4762H14.4543H14.4324H14.4103H14.3882H14.366H14.3437H14.3213H14.2988H14.2763H14.2536H14.2309H14.2081H14.1852H14.1622H14.1391H14.116H14.0928H14.0695H14.0461H14.0226H13.9991H13.9755H13.9518H13.928H13.9042H13.8802H13.8562H13.8322H13.808H13.7838H13.7595H13.7351H13.7107H13.6861H13.6616H13.6369H13.6122H13.5874H13.5625H13.5376H13.5126H13.4875H13.4623H13.4371H13.4119H13.3865H13.3611H13.3357H13.3101H13.2845H13.2589H13.2332H13.2074H13.1815H13.1556H13.1297H13.1037H13.0776H13.0514H13.0252H12.999H12.9727H12.9463H12.9199H12.8934H12.8669H12.8403H12.8136H12.7869H12.7602H12.7334H12.7065H12.6796H12.6527H12.6257H12.5986H12.5715H12.5444H12.5172H12.49H12.4627H12.4353H12.4079H12.3805H12.353H12.3255H12.298H12.2704H12.2427H12.215H12.1873H12.1595H12.1317H12.1039H12.076H12.0481H12.0201H11.9921H11.9641H11.936H11.9079H11.8797H11.8516H11.8233H11.7951H11.7668H11.7385H11.7102H11.6818H11.6534H11.6249H11.5965H11.568H11.5394H11.5109H11.4823H11.4537H11.425H11.3964H11.3677H11.339H11.3102H11.2814H11.2527H11.2238H11.195H11.1662H11.1373H11.1084H11.0795H11.0505H11.0216H10.9926H10.9636H10.9346H10.9055H10.8765H10.8474H10.8183H10.7893H10.7601H10.731H10.7019H10.6727H10.6436H10.6144H10.5852H10.556H10.5268H10.4976H10.4684H10.4392H10.4099H10.3807H10.3514H10.3221H10.2929H10.2636H10.2343H10.205H10.1758H10.1465H10.1172H10.0879H10.0586H10.0293H10H9.9707H9.94141H9.91211H9.88282H9.85353H9.82424H9.79495H9.76567H9.73639H9.70712H9.67785H9.64859H9.61934H9.59009H9.56085H9.53162H9.50239H9.47318H9.44397H9.41478H9.38559H9.35642H9.32726H9.29811H9.26898H9.23985H9.21074H9.18165H9.15257H9.12351H9.09446H9.06543H9.03642H9.00742H8.97844H8.94948H8.92054H8.89162H8.86273H8.83385H8.80499H8.77616H8.74734H8.71855H8.68979H8.66105H8.63233H8.60364H8.57497H8.54633H8.51772H8.48913H8.46058H8.43205H8.40355H8.37508H8.34664H8.31823H8.28985H8.2615H8.23318H8.2049H8.17665H8.14844H8.12026H8.09211H8.064H8.03592H8.00789H7.97989H7.95192H7.924H7.89611H7.86826H7.84045H7.81269H7.78496H7.75727H7.72963H7.70203H7.67447H7.64695H7.61948H7.59205H7.56467H7.53734H7.51005H7.4828H7.45561H7.42846H7.40136H7.37431H7.34731H7.32035H7.29345H7.2666H7.2398H7.21306H7.18636H7.15972H7.13313H7.1066H7.08012H7.0537H7.02733H7.00102H6.97476H6.94856H6.92243H6.89634H6.87032H6.84436H6.81846H6.79262H6.76684H6.74112H6.71546H6.68987H6.66434H6.63887H6.61347H6.58813H6.56286H6.53765H6.51251H6.48744H6.46244H6.4375H6.41263H6.38783H6.3631H6.33845H6.31386H6.28934H6.2649H6.24052H6.21623H6.192H6.16785H6.14377H6.11977H6.09584H6.07199H6.04822H6.02452H6.0009H5.97736H5.9539H5.93052H5.90722H5.884H5.86086H5.8378H5.81482H5.79192H5.76911H5.74639H5.72374H5.70118H5.67871H5.65632H5.63402H5.61181H5.58968H5.56764H5.54569H5.52383H5.50206H5.48038H5.45879H5.43729H5.41588H5.39456H5.37334H5.35221H5.33118H5.31024H5.28939H5.26864H5.24798H5.22743H5.20696H5.1866H5.16634H5.14617H5.1261H5.10613H5.08627H5.0665H5.04684H5.02727H5.00781H4.98845H4.9692H4.95005H4.93101H4.91207H4.89323H4.8745H4.85588H4.83737H4.81896H4.80066H4.78247H4.76439H4.74642H4.72856H4.71082H4.69318H4.67565H4.65824H4.64094H4.62376H4.60669H4.58973H4.57289H4.55617H4.53956H4.52307H4.50669H4.49044H4.4743H4.45828H4.44238H4.4266H4.41095H4.39541H4.38H4.3647H4.34953H4.33449H4.31956H4.30477H4.29009H4.27555H4.26113H4.24683H4.23266H4.21862H4.20471H4.19093H4.17728H4.16375H4.15036H4.1371H4.12396H4.11097H4.0981H4.08537H4.07277H4.0603H4.04797H4.03577H4.02371H4.01179H4C3.32502 23 2.7523 22.8284 2.28905 22.5196C1.83206 22.2149 1.53989 21.8158 1.35557 21.4472C1.17322 21.0825 1.08702 20.7299 1.04486 20.4769C1.02338 20.348 1.01225 20.2385 1.00645 20.1572C1.00353 20.1164 1.00192 20.0822 1.00104 20.0558C1.0006 20.0425 1.00034 20.0312 1.00019 20.0219L1.00004 20.0094L1.00001 20.0043L1 20.0021L1 20.001C1 20.0005 1 20 2 20H1V17C1 16.4477 1.44772 16 2 16H4ZM21 6H19V4.00903C19.0002 4.00504 19.0005 3.99697 19.0014 3.98531C19.0034 3.95721 19.0079 3.91053 19.0176 3.8519C19.038 3.72989 19.0768 3.5825 19.1444 3.44721C19.2101 3.31584 19.2929 3.21489 19.3985 3.14455C19.4977 3.07838 19.675 3 20 3C20.325 3 20.5023 3.07838 20.6015 3.14455C20.7071 3.21489 20.7899 3.31584 20.8556 3.44721C20.9232 3.5825 20.962 3.72989 20.9824 3.8519C20.9921 3.91053 20.9966 3.95721 20.9986 3.98531C20.9995 3.99697 20.9998 4.00504 21 4.00903V6ZM13.0449 20.4769C13.0693 20.6235 13.1085 20.8035 13.1726 21H13.1556H13.1297H13.1037H13.0776H13.0514H13.0252H12.999H12.9727H12.9463H12.9199H12.8934H12.8669H12.8403H12.8136H12.7869H12.7602H12.7334H12.7065H12.6796H12.6527H12.6257H12.5986H12.5715H12.5444H12.5172H12.49H12.4627H12.4353H12.4079H12.3805H12.353H12.3255H12.298H12.2704H12.2427H12.215H12.1873H12.1595H12.1317H12.1039H12.076H12.0481H12.0201H11.9921H11.9641H11.936H11.9079H11.8797H11.8516H11.8233H11.7951H11.7668H11.7385H11.7102H11.6818H11.6534H11.6249H11.5965H11.568H11.5394H11.5109H11.4823H11.4537H11.425H11.3964H11.3677H11.339H11.3102H11.2814H11.2527H11.2238H11.195H11.1662H11.1373H11.1084H11.0795H11.0505H11.0216H10.9926H10.9636H10.9346H10.9055H10.8765H10.8474H10.8183H10.7893H10.7601H10.731H10.7019H10.6727H10.6436H10.6144H10.5852H10.556H10.5268H10.4976H10.4684H10.4392H10.4099H10.3807H10.3514H10.3221H10.2929H10.2636H10.2343H10.205H10.1758H10.1465H10.1172H10.0879H10.0586H10.0293H10H9.9707H9.94141H9.91211H9.88282H9.85353H9.82424H9.79495H9.76567H9.73639H9.70712H9.67785H9.64859H9.61934H9.59009H9.56085H9.53162H9.50239H9.47318H9.44397H9.41478H9.38559H9.35642H9.32726H9.29811H9.26898H9.23985H9.21074H9.18165H9.15257H9.12351H9.09446H9.06543H9.03642H9.00742H8.97844H8.94948H8.92054H8.89162H8.86273H8.83385H8.80499H8.77616H8.74734H8.71855H8.68979H8.66105H8.63233H8.60364H8.57497H8.54633H8.51772H8.48913H8.46058H8.43205H8.40355H8.37508H8.34664H8.31823H8.28985H8.2615H8.23318H8.2049H8.17665H8.14844H8.12026H8.09211H8.064H8.03592H8.00789H7.97989H7.95192H7.924H7.89611H7.86826H7.84045H7.81269H7.78496H7.75727H7.72963H7.70203H7.67447H7.64695H7.61948H7.59205H7.56467H7.53734H7.51005H7.4828H7.45561H7.42846H7.40136H7.37431H7.34731H7.32035H7.29345H7.2666H7.2398H7.21306H7.18636H7.15972H7.13313H7.1066H7.08012H7.0537H7.02733H7.00102H6.97476H6.94856H6.92243H6.89634H6.87032H6.84436H6.81846H6.79262H6.76684H6.74112H6.71546H6.68987H6.66434H6.63887H6.61347H6.58813H6.56286H6.53765H6.51251H6.48744H6.46244H6.4375H6.41263H6.38783H6.3631H6.33845H6.31386H6.28934H6.2649H6.24052H6.21623H6.192H6.16785H6.14377H6.11977H6.09584H6.07199H6.04822H6.02452H6.0009H5.97736H5.9539H5.93052H5.90722H5.884H5.86086H5.8378H5.81482H5.79192H5.76911H5.74639H5.72374H5.70118H5.67871H5.65632H5.63402H5.61181H5.58968H5.56764H5.54569H5.52383H5.50206H5.48038H5.45879H5.43729H5.41588H5.39456H5.37334H5.35221H5.33118H5.31024H5.28939H5.26864H5.24798H5.22743H5.20696H5.1866H5.16634H5.14617H5.1261H5.10613H5.08627H5.0665H5.04684H5.02727H5.00781H4.98845H4.9692H4.95005H4.93101H4.91207H4.89323H4.8745H4.85588H4.83737H4.81896H4.80066H4.78247H4.76439H4.74642H4.72856H4.71082H4.69318H4.67565H4.65824H4.64094H4.62376H4.60669H4.58973H4.57289H4.55617H4.53956H4.52307H4.50669H4.49044H4.4743H4.45828H4.44238H4.4266H4.41095H4.39541H4.38H4.3647H4.34953H4.33449H4.31956H4.30477H4.29009H4.27555H4.26113H4.24683H4.23266H4.21862H4.20471H4.19093H4.17728H4.16375H4.15036H4.1371H4.12396H4.11097H4.0981H4.08537H4.07277H4.0603H4.04797H4.03577H4.02371H4.01179H4C3.67498 21 3.4977 20.9216 3.39845 20.8554C3.29294 20.7851 3.21011 20.6842 3.14443 20.5528C3.07678 20.4175 3.03798 20.2701 3.01764 20.1481C3.00787 20.0895 3.00337 20.0428 3.00136 20.0147C3.00053 20.003 3.00016 19.995 3 19.991V18H5H13V20H14C13 20 13 20.0005 13 20.001L13 20.0021L13 20.0043L13 20.0094L13.0002 20.0219C13.0003 20.0278 13.0004 20.0345 13.0006 20.042C13.0007 20.0463 13.0009 20.0509 13.001 20.0558C13.0019 20.0822 13.0035 20.1164 13.0064 20.1572C13.0123 20.2385 13.0234 20.348 13.0449 20.4769Z"
        fill="#575757"
      />
      <path
        d="M8 8H13"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8 12H13"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const PaymentIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M21 13H22H21ZM19.8317 6.99084L18.8878 6.66056L19.8317 6.99084ZM17.9908 8.83165L17.6606 7.88777L17.9908 8.83165ZM15.2929 16.7071L14.5858 17.4142L15.2929 16.7071ZM15.2929 13.2929L14.5858 12.5858L15.2929 13.2929ZM20.7071 9.29289L21.4142 8.58579L20.7071 9.29289ZM19 21V22V21ZM20.7071 20.7071L20 20L20.7071 20.7071ZM7.00001 21V22V21ZM3.58579 20.4142L2.87869 21.1213L3.58579 20.4142ZM19.6651 4.02806L19.9954 3.08418L19.6651 4.02806ZM19.9719 4.33486L20.9158 4.00458L19.9719 4.33486ZM5.50001 5L19.2857 5V3L5.50001 3L5.50001 5ZM7.00001 22L19 22V20L7.00001 20V22ZM2.00001 6.5L2.00001 17H4.00001L4.00001 6.5H2.00001ZM19 8L5.50001 8V10L19 10L19 8ZM20 17V19H22L22 17H20ZM20 11L20 13H22L22 11H20ZM17 18H21V16H17V18ZM20 13L20 17H22L22 13H20ZM21 12H17V14H21V12ZM15.7143 8L15 8V10L15.7143 10V8ZM19 4.71428C19 5.99493 18.9859 6.38024 18.8878 6.66056L20.7755 7.32112C21.0141 6.6392 21 5.82755 21 4.71428H19ZM15.7143 10C16.8276 10 17.6392 10.0141 18.3211 9.77553L17.6606 7.88777C17.3802 7.98585 16.9949 8 15.7143 8V10ZM18.8878 6.66056C18.6867 7.23505 18.2351 7.68674 17.6606 7.88777L18.3211 9.77553C19.4701 9.37348 20.3735 8.4701 20.7755 7.32112L18.8878 6.66056ZM14 15C14 15.4431 13.9979 15.8761 14.0455 16.2305C14.097 16.6137 14.2226 17.051 14.5858 17.4142L16 16C16.0703 16.0703 16.0494 16.1254 16.0277 15.964C16.0021 15.7738 16 15.4997 16 15H14ZM17 16C16.5003 16 16.2262 15.9979 16.036 15.9723C15.8746 15.9506 15.9297 15.9297 16 16L14.5858 17.4142C14.949 17.7774 15.3863 17.903 15.7695 17.9545C16.1239 18.0021 16.5569 18 17 18V16ZM16 15C16 14.5003 16.0021 14.2262 16.0277 14.036C16.0494 13.8746 16.0703 13.9297 16 14L14.5858 12.5858C14.2226 12.949 14.097 13.3863 14.0455 13.7695C13.9979 14.1239 14 14.5569 14 15H16ZM17 12C16.5569 12 16.1239 11.9979 15.7695 12.0455C15.3863 12.097 14.949 12.2226 14.5858 12.5858L16 14C15.9297 14.0703 15.8746 14.0494 16.036 14.0277C16.2262 14.0021 16.5003 14 17 14V12ZM19 10C19.4997 10 19.7738 10.0021 19.964 10.0277C20.1254 10.0494 20.0703 10.0703 20 10L21.4142 8.58579C21.051 8.22257 20.6137 8.09705 20.2305 8.04553C19.8761 7.99788 19.4431 8 19 8L19 10ZM22 11C22 10.5569 22.0021 10.1239 21.9545 9.76948C21.903 9.38628 21.7774 8.949 21.4142 8.58579L20 10C19.9297 9.92968 19.9506 9.87455 19.9723 10.036C19.9979 10.2262 20 10.5003 20 11H22ZM19 22C19.4431 22 19.8761 22.0021 20.2305 21.9545C20.6137 21.903 21.051 21.7774 21.4142 21.4142L20 20C20.0703 19.9297 20.1254 19.9506 19.964 19.9723C19.7738 19.9979 19.4997 20 19 20V22ZM20 19C20 19.4997 19.9979 19.7738 19.9723 19.964C19.9506 20.1254 19.9297 20.0703 20 20L21.4142 21.4142C21.7774 21.051 21.903 20.6137 21.9545 20.2305C22.0021 19.8761 22 19.4431 22 19H20ZM7.00001 20C6.02893 20 5.40122 19.9979 4.93871 19.9357C4.50497 19.8774 4.36902 19.7832 4.2929 19.7071L2.87869 21.1213C3.38835 21.631 4.0167 21.8297 4.67222 21.9179C5.29897 22.0021 6.08547 22 7.00001 22V20ZM2.00001 17C2.00001 17.9145 1.99788 18.701 2.08215 19.3278C2.17028 19.9833 2.36902 20.6117 2.87869 21.1213L4.2929 19.7071C4.21678 19.631 4.12263 19.495 4.06431 19.0613C4.00213 18.5988 4.00001 17.9711 4.00001 17H2.00001ZM2.00001 6.5C2.00001 8.433 3.56701 10 5.50001 10V8C4.67158 8 4.00001 7.32843 4.00001 6.5H2.00001ZM19.2857 5C19.3372 5 19.3747 5.00001 19.4065 5.00037C19.4383 5.00073 19.4543 5.00136 19.4617 5.0018C19.4688 5.00221 19.4578 5.00191 19.4362 4.99831C19.4126 4.99439 19.3771 4.98673 19.3349 4.97194L19.9954 3.08418C19.7144 2.98586 19.4015 3 19.2857 3V5ZM21 4.71428C21 4.59849 21.0141 4.28557 20.9158 4.00458L19.0281 4.66514C19.0133 4.62287 19.0056 4.58742 19.0017 4.56385C18.9981 4.54218 18.9978 4.53118 18.9982 4.53829C18.9986 4.54567 18.9993 4.56166 18.9996 4.59346C19 4.62528 19 4.66277 19 4.71428H21ZM19.3349 4.97194C19.1912 4.92169 19.0783 4.80876 19.0281 4.66514L20.9158 4.00458C20.7651 3.57371 20.4263 3.23494 19.9954 3.08418L19.3349 4.97194ZM4.00001 6.5C4.00001 5.67157 4.67158 5 5.50001 5L5.50001 3C3.56701 3 2.00001 4.567 2.00001 6.5H4.00001Z"
        fill="#575757"
      />
    </svg>
  );
};

export const TermsIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.5 4C16.9045 4 17.6067 4 18.1111 4.33706C18.3295 4.48298 18.517 4.67048 18.6629 4.88886C19 5.39331 19 6.09554 19 7.5V17C19 18.8856 19 19.8284 18.4142 20.4142C17.8284 21 16.8856 21 15 21H9C7.11438 21 6.17157 21 5.58579 20.4142C5 19.8284 5 18.8856 5 17V7.5C5 6.09554 5 5.39331 5.33706 4.88886C5.48298 4.67048 5.67048 4.48298 5.88886 4.33706C6.39331 4 7.09554 4 8.5 4"
        stroke="#575757"
        strokeWidth="2"
      />
      <path
        d="M9 4C9 2.89543 9.89543 2 11 2H13C14.1046 2 15 2.89543 15 4C15 5.10457 14.1046 6 13 6H11C9.89543 6 9 5.10457 9 4Z"
        stroke="#575757"
        strokeWidth="2"
      />
      <path
        d="M9 11L15 11"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
      <path
        d="M9 15L13 15"
        stroke="#575757"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const CopyIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14 7V7C14 6.06812 14 5.60218 13.8478 5.23463C13.6448 4.74458 13.2554 4.35523 12.7654 4.15224C12.3978 4 11.9319 4 11 4H8C6.11438 4 5.17157 4 4.58579 4.58579C4 5.17157 4 6.11438 4 8V11C4 11.9319 4 12.3978 4.15224 12.7654C4.35523 13.2554 4.74458 13.6448 5.23463 13.8478C5.60218 14 6.06812 14 7 14V14"
        stroke="#575757"
        strokeWidth="2"
      />
      <rect
        x="10"
        y="10"
        width="10"
        height="10"
        rx="2"
        stroke="#575757"
        strokeWidth="2"
      />
    </svg>
  );
};

export const HomeIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M21 18V12.5925C21 10.8237 21 9.93935 20.649 9.15764C20.2979 8.37593 19.6369 7.78837 18.3149 6.61325L17.3149 5.72437C14.7855 3.476 13.5208 2.35182 12 2.35182C10.4792 2.35182 9.2145 3.476 6.68509 5.72437L5.68509 6.61325C4.36308 7.78837 3.70208 8.37593 3.35104 9.15764C3 9.93935 3 10.8237 3 12.5925V18C3 18.9319 3 19.3978 3.15224 19.7654C3.35523 20.2554 3.74458 20.6448 4.23463 20.8478C4.60218 21 5.06812 21 6 21H6.33333C6.95331 21 7.26331 21 7.51764 20.9319C8.20782 20.7469 8.74692 20.2078 8.93185 19.5176C9 19.2633 9 18.9533 9 18.3333V16C9 14.3431 10.3431 13 12 13C13.6569 13 15 14.3431 15 16V18.3333C15 18.9533 15 19.2633 15.0681 19.5176C15.2531 20.2078 15.7922 20.7469 16.4824 20.9319C16.7367 21 17.0467 21 17.6667 21H18C18.9319 21 19.3978 21 19.7654 20.8478C20.2554 20.6448 20.6448 20.2554 20.8478 19.7654C21 19.3978 21 18.9319 21 18Z"
        fill="#C7C7C7"
      />
    </svg>
  );
};

export const HomeFilledIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M21 18V12.5925C21 10.8237 21 9.93935 20.649 9.15764C20.2979 8.37593 19.6369 7.78837 18.3149 6.61325L17.3149 5.72437C14.7855 3.476 13.5208 2.35182 12 2.35182C10.4792 2.35182 9.2145 3.476 6.68509 5.72437L5.68509 6.61325C4.36308 7.78837 3.70208 8.37593 3.35104 9.15764C3 9.93935 3 10.8237 3 12.5925V18C3 18.9319 3 19.3978 3.15224 19.7654C3.35523 20.2554 3.74458 20.6448 4.23463 20.8478C4.60218 21 5.06812 21 6 21H6.33333C6.95331 21 7.26331 21 7.51764 20.9319C8.20782 20.7469 8.74692 20.2078 8.93185 19.5176C9 19.2633 9 18.9533 9 18.3333V16C9 14.3431 10.3431 13 12 13C13.6569 13 15 14.3431 15 16V18.3333C15 18.9533 15 19.2633 15.0681 19.5176C15.2531 20.2078 15.7922 20.7469 16.4824 20.9319C16.7367 21 17.0467 21 17.6667 21H18C18.9319 21 19.3978 21 19.7654 20.8478C20.2554 20.6448 20.6448 20.2554 20.8478 19.7654C21 19.3978 21 18.9319 21 18Z"
        fill="url(#paint0_linearx)"
      />
      <defs>
        <linearGradient
          id="paint0_linearx"
          x1="2.775"
          y1="11"
          x2="21"
          y2="11"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const ProductsFilledIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 23C8.45 23 8 22.55 8 22V13C8 12.45 8.45 12 9 12H15C15.55 12 16 12.45 16 13V22C16 22.55 15.55 23 15 23H9ZM10 11C9.45 11 9 10.55 9 10V5.25C9 5.25 11 3 11.75 1C12.83 1.67 13.92 2.33 14.46 3.83C15 5.33 15 7.67 15 10C15 10.55 14.55 11 14 11H10Z"
        fill="url(#paint0_linear)"
      />
      <defs>
        <linearGradient
          id="paint0_linear"
          x1="7.9"
          y1="12"
          x2="16"
          y2="12"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const CartFilledIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clipRule="evenodd"
        d="M12 0.0999756C14.4301 0.0999756 16.4 2.06992 16.4 4.49998V6.99998H17.1C17.9401 6.99998 18.3601 6.99998 18.681 7.16347C18.9632 7.30728 19.1927 7.53675 19.3365 7.81899C19.5 8.13986 19.5 8.5599 19.5 9.39997V16.6C19.5 18.8402 19.5 19.9603 19.064 20.8159C18.6805 21.5686 18.0686 22.1805 17.316 22.564C16.4603 23 15.3402 23 13.1 23H10.9C8.65979 23 7.53969 23 6.68404 22.564C5.93139 22.1805 5.31947 21.5686 4.93597 20.8159C4.5 19.9603 4.5 18.8402 4.5 16.6V9.39997C4.5 8.5599 4.5 8.13986 4.66349 7.81899C4.8073 7.53675 5.03677 7.30728 5.31901 7.16347C5.63988 6.99998 6.05992 6.99998 6.9 6.99998H7.6V4.49998C7.6 2.06992 9.56995 0.0999756 12 0.0999756ZM14.6 6.99998V4.49998C14.6 3.06404 13.4359 1.89998 12 1.89998C10.5641 1.89998 9.4 3.06404 9.4 4.49998V6.99998H14.6ZM9.5 9.49998C9.5 10.0523 9.05228 10.5 8.5 10.5C7.94772 10.5 7.5 10.0523 7.5 9.49998C7.5 8.94769 7.94772 8.49998 8.5 8.49998C9.05228 8.49998 9.5 8.94769 9.5 9.49998ZM15.5 10.5C16.0523 10.5 16.5 10.0523 16.5 9.49998C16.5 8.94769 16.0523 8.49998 15.5 8.49998C14.9477 8.49998 14.5 8.94769 14.5 9.49998C14.5 10.0523 14.9477 10.5 15.5 10.5Z"
        fill="url(#paint0_linear)"
      />
      <defs>
        <linearGradient
          id="paint0_linear"
          x1="4.3125"
          y1="11.55"
          x2="19.5"
          y2="11.55"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const AccountFilledIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 4C14.21 4 16 5.79 16 8C16 10.21 14.21 12 12 12C9.79 12 8 10.21 8 8C8 5.79 9.79 4 12 4ZM12 20C12 20 20 20 20 18C20 15.6 16.1 13 12 13C7.9 13 4 15.6 4 18C4 20 12 20 12 20Z"
        fill="url(#paint0_linear)"
      />
      <defs>
        <linearGradient
          id="paint0_linear"
          x1="3.8"
          y1="12"
          x2="20"
          y2="12"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const ProductsIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 23C8.45 23 8 22.55 8 22V13C8 12.45 8.45 12 9 12H15C15.55 12 16 12.45 16 13V22C16 22.55 15.55 23 15 23H9ZM10 11C9.45 11 9 10.55 9 10V5.25C9 5.25 11 3 11.75 1C12.83 1.67 13.92 2.33 14.46 3.83C15 5.33 15 7.67 15 10C15 10.55 14.55 11 14 11H10Z"
        fill="#C7C7C7"
      />
    </svg>
  );
};

export const CartIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M12 0.100098C14.4301 0.100098 16.4 2.07004 16.4 4.5001V7.0001H17.1C17.9401 7.0001 18.3601 7.0001 18.681 7.16359C18.9632 7.3074 19.1927 7.53687 19.3365 7.81911C19.5 8.13998 19.5 8.56002 19.5 9.4001V16.6001C19.5 18.8403 19.5 19.9604 19.064 20.8161C18.6805 21.5687 18.0686 22.1806 17.316 22.5641C16.4603 23.0001 15.3402 23.0001 13.1 23.0001H10.9C8.65979 23.0001 7.53969 23.0001 6.68404 22.5641C5.93139 22.1806 5.31947 21.5687 4.93597 20.8161C4.5 19.9604 4.5 18.8403 4.5 16.6001V9.4001C4.5 8.56002 4.5 8.13998 4.66349 7.81911C4.8073 7.53687 5.03677 7.3074 5.31901 7.16359C5.63988 7.0001 6.05992 7.0001 6.9 7.0001H7.6V4.5001C7.6 2.07004 9.56995 0.100098 12 0.100098ZM14.6 7.0001V4.5001C14.6 3.06416 13.4359 1.9001 12 1.9001C10.5641 1.9001 9.4 3.06416 9.4 4.5001V7.0001H14.6ZM9.5 9.5001C9.5 10.0524 9.05228 10.5001 8.5 10.5001C7.94772 10.5001 7.5 10.0524 7.5 9.5001C7.5 8.94781 7.94772 8.5001 8.5 8.5001C9.05228 8.5001 9.5 8.94781 9.5 9.5001ZM15.5 10.5001C16.0523 10.5001 16.5 10.0524 16.5 9.5001C16.5 8.94781 16.0523 8.5001 15.5 8.5001C14.9477 8.5001 14.5 8.94781 14.5 9.5001C14.5 10.0524 14.9477 10.5001 15.5 10.5001Z"
        fill="#C7C7C7"
      />
    </svg>
  );
};

export const AccountIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 4C14.21 4 16 5.79 16 8C16 10.21 14.21 12 12 12C9.79 12 8 10.21 8 8C8 5.79 9.79 4 12 4ZM12 20C12 20 20 20 20 18C20 15.6 16.1 13 12 13C7.9 13 4 15.6 4 18C4 20 12 20 12 20Z"
        fill="#C7C7C7"
      />
    </svg>
  );
};

export const WarningIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12ZM12 6C12.5523 6 13 6.44772 13 7V13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13V7C11 6.44772 11.4477 6 12 6ZM12 18C12.5523 18 13 17.5523 13 17C13 16.4477 12.5523 16 12 16C11.4477 16 11 16.4477 11 17C11 17.5523 11.4477 18 12 18Z"
        fill="#D9304C"
      />
    </svg>
  );
};

export const SuccessIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 48 / 375)',
  height = 'calc(100vw * 48 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 48 48"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="24" cy="24" r="18" fill="#E9F5EB" />
      <path
        d="M24 42C28.1644 42 32.2 40.5561 35.4191 37.9142C38.6382 35.2723 40.8417 31.596 41.6541 27.5116C42.4666 23.4273 41.8377 19.1875 39.8746 15.5149C37.9115 11.8422 34.7357 8.96382 30.8883 7.37017C27.0409 5.77652 22.76 5.56621 18.7749 6.77507C14.7898 7.98393 11.3472 10.5372 9.03355 13.9997C6.71993 17.4623 5.67849 21.62 6.08667 25.7643C6.49486 29.9086 8.3274 33.7832 11.2721 36.7279"
        stroke="#229930"
        strokeWidth="4"
        strokeLinecap="round"
      />
      <path
        d="M32 20L23.402 30.3175C22.7465 31.1042 22.4187 31.4976 21.9781 31.5176C21.5375 31.5375 21.1755 31.1755 20.4514 30.4514L16 26"
        stroke="#229930"
        strokeWidth="4"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const ErrorIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 48 / 375)',
  height = 'calc(100vw * 48 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 48 48"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="24" cy="24" r="18" fill="#FCEBEE" />
      <path
        d="M24 42C28.1644 42 32.2 40.5561 35.4191 37.9142C38.6382 35.2723 40.8417 31.596 41.6541 27.5116C42.4666 23.4273 41.8377 19.1875 39.8746 15.5149C37.9115 11.8422 34.7357 8.96382 30.8883 7.37017C27.0409 5.77652 22.76 5.56621 18.7749 6.77507C14.7898 7.98393 11.3472 10.5372 9.03355 13.9997C6.71993 17.4623 5.67849 21.62 6.08667 25.7643C6.49486 29.9086 8.3274 33.7832 11.2721 36.7279"
        stroke="#D9304C"
        strokeWidth="4"
        strokeLinecap="round"
      />
      <path
        d="M18 18L30 30"
        stroke="#D9304C"
        strokeWidth="4"
        strokeLinecap="round"
      />
      <path
        d="M30 18L18 30"
        stroke="#D9304C"
        strokeWidth="4"
        strokeLinecap="round"
      />
    </svg>
  );
};

export const UploadIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 48 / 375)',
  height = 'calc(100vw * 48 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 48 48"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M40.5 1.6875H7.5C3.36438 1.6875 0 5.05188 0 9.1875V35.4375C0 39.5731 3.36438 42.9375 7.5 42.9375H33.0938C34.1294 42.9375 34.9688 42.0981 34.9688 41.0625C34.9688 40.0269 34.1294 39.1875 33.0938 39.1875H26.1877L21.8767 33.5947L35.5382 16.2184L44.7349 26.3829C45.2549 26.9583 46.0756 27.1534 46.7992 26.8748C47.5225 26.5957 48 25.9003 48 25.125V9.1875C48 5.05188 44.6356 1.6875 40.5 1.6875V1.6875ZM44.25 20.2581L36.828 12.0546C36.4574 11.6448 35.9242 11.4185 35.3727 11.4386C34.8208 11.458 34.3052 11.7195 33.9635 12.1538L19.515 30.531L14.61 24.1677C14.2551 23.7074 13.7065 23.4375 13.125 23.4375C13.1246 23.4375 13.1243 23.4375 13.1239 23.4375C12.5424 23.4379 11.9934 23.7081 11.6389 24.1692L7.51245 29.5334C6.8811 30.3545 7.03455 31.5315 7.85522 32.1628C8.67627 32.7946 9.85327 32.6407 10.485 31.8201L13.1265 28.3857L21.453 39.1875H7.5C5.43237 39.1875 3.75 37.5051 3.75 35.4375V9.1875C3.75 7.11987 5.43237 5.4375 7.5 5.4375H40.5C42.5676 5.4375 44.25 7.11987 44.25 9.1875V20.2581Z"
        fill="url(#paint0_linear)"
      />
      <path
        d="M13.125 8.4375C10.0232 8.4375 7.5 10.9607 7.5 14.0625C7.5 17.1643 10.0232 19.6875 13.125 19.6875C16.2268 19.6875 18.75 17.1643 18.75 14.0625C18.75 10.9607 16.2268 8.4375 13.125 8.4375ZM13.125 15.9375C12.0912 15.9375 11.25 15.0963 11.25 14.0625C11.25 13.0287 12.0912 12.1875 13.125 12.1875C14.1588 12.1875 15 13.0287 15 14.0625C15 15.0963 14.1588 15.9375 13.125 15.9375Z"
        fill="url(#paint1_linear)"
      />
      <path
        d="M43.9198 30.0883C43.9143 30.0828 43.9088 30.0769 43.9033 30.0714C43.0171 29.179 41.8382 28.6875 40.5836 28.6875C39.3326 28.6875 38.1571 29.176 37.2719 30.0634L33.6519 33.6339C32.9148 34.3608 32.9067 35.5481 33.634 36.2853C34.3609 37.0225 35.5482 37.0309 36.2854 36.3036L38.7086 33.9137V44.4375C38.7086 45.4731 39.5479 46.3125 40.5836 46.3125C41.6192 46.3125 42.4586 45.4731 42.4586 44.4375V33.9708L44.7778 36.3666C45.1455 36.7467 45.6351 36.9375 46.1251 36.9375C46.5949 36.9375 47.0652 36.7621 47.4292 36.4098C48.1733 35.6895 48.1923 34.5026 47.472 33.7584L43.9198 30.0883Z"
        fill="url(#paint2_linear)"
      />
      <defs>
        <linearGradient
          id="paint0_linear"
          x1="-0.6"
          y1="22.3125"
          x2="48"
          y2="22.3125"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
        <linearGradient
          id="paint1_linear"
          x1="7.35938"
          y1="14.0625"
          x2="18.75"
          y2="14.0625"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
        <linearGradient
          id="paint2_linear"
          x1="32.9074"
          y1="37.5"
          x2="48"
          y2="37.5"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#FFAF8D" />
          <stop offset="1" stopColor="#F679D5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const VietamIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z"
        fill="#D80027"
      />
      <path
        d="M12 6.26074L13.2951 10.2465H17.4859L14.0954 12.7098L15.3905 16.6955L12 14.2322L8.60956 16.6955L9.90462 12.7098L6.51416 10.2465H10.705L12 6.26074Z"
        fill="#FFDA44"
      />
    </svg>
  );
};

export const IndiaIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z"
        fill="#F0F0F0"
      />
      <path
        d="M12 0C7.24242 0 3.13167 2.76867 1.19067 6.78263H22.8092C20.8682 2.76867 16.7574 0 12 0Z"
        fill="#FF9811"
      />
      <path
        d="M12 23.9999C16.7574 23.9999 20.8682 21.2312 22.8092 17.2173H1.19067C3.13167 21.2312 7.24242 23.9999 12 23.9999Z"
        fill="#6DA544"
      />
      <path
        d="M12.0001 16.174C14.3052 16.174 16.174 14.3052 16.174 12.0001C16.174 9.69489 14.3052 7.82617 12.0001 7.82617C9.69489 7.82617 7.82617 9.69489 7.82617 12.0001C7.82617 14.3052 9.69489 16.174 12.0001 16.174Z"
        fill="#0052B4"
      />
      <path
        d="M12 14.6085C13.4408 14.6085 14.6087 13.4405 14.6087 11.9998C14.6087 10.5591 13.4408 9.39111 12 9.39111C10.5593 9.39111 9.39136 10.5591 9.39136 11.9998C9.39136 13.4405 10.5593 14.6085 12 14.6085Z"
        fill="#F0F0F0"
      />
      <path
        d="M12 8.78076L12.8048 10.606L14.7878 10.3903L13.6095 11.9998L14.7878 13.6094L12.8048 13.3937L12 15.2189L11.1952 13.3937L9.21216 13.6093L10.3904 11.9998L9.21216 10.3903L11.1952 10.606L12 8.78076Z"
        fill="#0052B4"
      />
    </svg>
  );
};

export const HongkongIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z"
        fill="#D80027"
      />
      <path
        d="M13.2387 9.07813C12.966 10.2125 12.4815 9.99613 12.2437 10.9854C10.8429 10.6486 9.98022 9.23999 10.317 7.83913C10.6537 6.43836 12.0624 5.57567 13.4632 5.91247C12.9876 7.89092 13.4827 8.06361 13.2387 9.07813Z"
        fill="#F0F0F0"
      />
      <path
        d="M9.60395 9.91871C10.5985 10.5286 10.243 10.9226 11.1103 11.4545C10.3571 12.6827 8.75092 13.0678 7.5227 12.3146C6.29453 11.5615 5.90936 9.95522 6.66255 8.72705C8.3972 9.79074 8.71431 9.37322 9.60395 9.91871Z"
        fill="#F0F0F0"
      />
      <path
        d="M9.28019 13.6355C10.1676 12.8781 10.4324 13.338 11.2062 12.6775C12.1416 13.7733 12.0115 15.4199 10.9158 16.3553C9.81991 17.2907 8.17329 17.1604 7.23804 16.0647C8.78557 14.7437 8.48646 14.3129 9.28019 13.6355Z"
        fill="#F0F0F0"
      />
      <path
        d="M12.7148 15.0919C12.2685 14.0139 12.7877 13.9041 12.3987 12.9641C13.7299 12.4132 15.2558 13.0457 15.8067 14.3769C16.3576 15.7081 15.725 17.2339 14.3938 17.7849C13.6158 15.9048 13.1139 16.0561 12.7148 15.0919Z"
        fill="#F0F0F0"
      />
      <path
        d="M15.1615 12.2755C13.9984 12.3668 14.0542 11.839 13.0401 11.9186C12.9275 10.4824 14.0006 9.22654 15.4369 9.1138C16.8732 9.00135 18.1289 10.0744 18.2415 11.5108C16.2129 11.6698 16.2017 12.194 15.1615 12.2755Z"
        fill="#F0F0F0"
      />
    </svg>
  );
};

export const ChinaIcon: React.FC<IProps> = ({
  width = 'calc(100vw * 24 / 375)',
  height = 'calc(100vw * 24 / 375)',
}) => {
  return (
    <svg
      style={{ width, height }}
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z"
        fill="#D80027"
      />
      <path
        d="M6.56719 7.30322L7.60312 10.4907H10.9547L8.24531 12.4642L9.28125 15.6517L6.56719 13.6829L3.85313 15.6517L4.89375 12.4642L2.17969 10.4907H5.53125L6.56719 7.30322Z"
        fill="#FFDA44"
      />
      <path
        d="M14.2267 18.586L13.4345 17.611L12.2626 18.0657L12.9423 17.011L12.1501 16.0313L13.3642 16.3547L14.0486 15.3L14.1142 16.5563L15.3329 16.8797L14.1564 17.3297L14.2267 18.586Z"
        fill="#FFDA44"
      />
      <path
        d="M15.8017 15.7266L16.1767 14.5266L15.1501 13.8L16.4064 13.7813L16.7767 12.5813L17.1845 13.7719L18.4408 13.7579L17.433 14.5079L17.8361 15.6985L16.8095 14.9719L15.8017 15.7266Z"
        fill="#FFDA44"
      />
      <path
        d="M17.9249 8.80771L17.3717 9.9374L18.2717 10.814L17.0295 10.6358L16.4764 11.7608L16.2608 10.5233L15.0139 10.3452L16.1295 9.75928L15.9139 8.51709L16.8139 9.39365L17.9249 8.80771Z"
        fill="#FFDA44"
      />
      <path
        d="M14.2594 5.38599L14.1657 6.63755L15.3329 7.11099L14.1094 7.41099L14.0204 8.66724L13.3594 7.59849L12.136 7.89849L12.9469 6.93755L12.2813 5.87349L13.4485 6.34692L14.2594 5.38599Z"
        fill="#FFDA44"
      />
    </svg>
  );
};
